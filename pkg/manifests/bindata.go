// Code generated by go-bindata. DO NOT EDIT.
// sources:
// assets/router/cluster-role-binding.yaml (329B)
// assets/router/cluster-role.yaml (788B)
// assets/router/deployment.yaml (1.76kB)
// assets/router/metrics/cluster-role-binding.yaml (285B)
// assets/router/metrics/cluster-role.yaml (259B)
// assets/router/metrics/role-binding.yaml (297B)
// assets/router/metrics/role.yaml (291B)
// assets/router/namespace.yaml (332B)
// assets/router/service-account.yaml (213B)
// assets/router/service-cloud.yaml (631B)
// assets/router/service-internal.yaml (429B)
// manifests/00-cluster-role.yaml (2.305kB)
// manifests/00-custom-resource-definition-internal.yaml (4.452kB)
// manifests/00-custom-resource-definition.yaml (31.552kB)
// manifests/00-ingress-credentials-request.yaml (1.464kB)
// manifests/00-namespace.yaml (266B)
// manifests/0000_90_ingress-operator_00_prometheusrole.yaml (237B)
// manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml (305B)
// manifests/0000_90_ingress-operator_02_servicemonitor.yaml (511B)
// manifests/01-cluster-role-binding.yaml (369B)
// manifests/01-role-binding.yaml (367B)
// manifests/01-role.yaml (477B)
// manifests/01-service-account.yaml (196B)
// manifests/01-service.yaml (344B)
// manifests/01-trusted-ca-configmap.yaml (323B)
// manifests/02-deployment.yaml (2.809kB)
// manifests/03-cluster-operator.yaml (357B)
// manifests/image-references (433B)

package manifests

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsRouterClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x31\x4e\xc4\x40\x0c\x45\xfb\x39\x85\x25\xea\x0c\xa2\x43\xd3\x01\x37\x58\x24\x7a\xef\xc4\xbb\x31\x49\xec\xc8\xf6\xa4\xe0\xf4\x28\x4a\x44\xc3\x4a\x29\x2d\xf9\xbf\xff\xfe\x13\xbc\xb3\xf4\x0e\x31\x10\x98\xb6\x20\x03\xd3\x89\x20\x14\x38\x1c\x3e\xc9\x56\xae\x04\x6f\xb5\x6a\x93\xc8\x69\x64\xe9\x0b\x7c\x4c\xcd\x83\xec\xa2\x13\x6d\x71\x96\x7b\xc2\x85\xbf\xc8\x9c\x55\x0a\xd8\x15\x6b\xc6\x16\x83\x1a\xff\x60\xb0\x4a\x1e\x5f\x3d\xb3\x3e\xaf\x2f\x69\xa6\xc0\x1e\x03\x4b\x02\x10\x9c\xa9\x80\x2e\x24\x3e\xf0\x2d\x3a\x96\xbb\x91\x7b\xb7\x9b\x24\x6f\xd7\x6f\xaa\xe1\x25\x75\xb0\x17\x1f\x3e\x87\xce\x1f\xe1\xf8\xdf\x4f\x5f\xb0\x3e\xa2\xa6\x6d\xd8\x85\x6e\x5b\xf1\xbf\x19\xe7\x32\x27\xf0\xdf\x00\x00\x00\xff\xff\x83\x13\xa9\xa6\x49\x01\x00\x00")

func assetsRouterClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleBindingYaml,
		"assets/router/cluster-role-binding.yaml",
	)
}

func assetsRouterClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role-binding.yaml", size: 329, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0x9a, 0xeb, 0xd3, 0x79, 0x1a, 0xa6, 0x75, 0xb5, 0xda, 0x10, 0x70, 0xf9, 0x80, 0xd1, 0x51, 0x55, 0x98, 0x4d, 0x11, 0x98, 0x79, 0x5c, 0x46, 0x99, 0xa3, 0x39, 0x68, 0xe9, 0xa2, 0x72, 0x56}}
	return a, nil
}

var _assetsRouterClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x31\x6f\xe3\x30\x0c\x85\x77\xfd\x0a\x22\x37\xdb\xc1\x6d\x07\xaf\x37\xdc\x76\x43\x51\x74\xa7\x65\xa6\x66\xed\x88\x02\x49\x39\x6d\x7f\x7d\x61\x3b\x29\x82\x24\x45\x9b\xcd\xcf\x22\xbf\x47\x3e\xe9\x17\xfc\x1d\x8b\x39\x29\x58\x94\x4c\x1d\xa8\x8c\x04\x3b\x51\x50\x29\x4e\x6a\x35\x3c\xf6\x6c\x60\xbd\x94\xb1\x83\x96\x00\x0d\x94\xcc\x95\xa3\xf3\xb4\xc8\x2c\x66\xdc\x8e\x54\x87\x81\x53\xd7\x9c\x88\x0f\x32\x52\xc0\xcc\x4f\xa4\xc6\x92\x1a\xd0\x16\x63\x8d\xc5\x7b\x51\x7e\x47\x67\x49\xf5\xf0\xc7\x6a\x96\xed\xf4\x3b\xec\xc9\xb1\x43\xc7\x26\x00\x24\xdc\x53\x03\x92\x29\x59\xcf\x3b\xaf\x38\x3d\x2b\x99\x55\xeb\x48\x41\xcb\x48\xd6\x84\x0a\x30\xf3\x3f\x95\x92\x6d\x6e\xaa\x60\xb3\x09\x30\xcf\x26\x45\x23\x1d\xff\x51\xea\xb2\x70\x72\x5b\xd4\x0c\xb6\x8c\x91\x56\x69\xa4\x13\xaf\x62\x22\x6d\x8f\x2d\x23\x9b\x2f\x1f\x07\xf4\xd8\x87\x6b\x9f\x79\x05\x4a\xce\xf1\x7c\x87\x6b\x6b\x97\x81\x92\xd2\xc4\x74\xb8\x70\x88\x4a\xe8\xf4\x05\xf9\x32\x9c\x6b\xb0\x95\xf6\x85\xa2\x63\x8c\x64\x76\x9f\xc1\x92\x60\xfd\x99\xec\x4d\xfc\x52\x73\x6f\x26\x3f\x07\x6f\xcd\xd1\xcb\x05\xbf\xe4\xee\xf6\xc0\x46\xb1\x28\xfb\xdb\x37\xe8\x53\x59\x94\xe4\xf4\xea\x51\x92\xb9\xe2\xf1\xde\xcf\x7d\x8c\xce\x9a\xff\xcf\xcf\x61\x3d\xe8\xc5\x3c\x91\x1f\x44\x87\xf0\x11\x00\x00\xff\xff\xad\x45\xb2\xc3\x14\x03\x00\x00")

func assetsRouterClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleYaml,
		"assets/router/cluster-role.yaml",
	)
}

func assetsRouterClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role.yaml", size: 788, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa, 0xc4, 0x4e, 0xa2, 0x9d, 0x1b, 0xd7, 0x35, 0xbf, 0x95, 0x95, 0xb4, 0x17, 0x87, 0x56, 0xb, 0x12, 0xf, 0xb6, 0x3e, 0x51, 0xe5, 0x5a, 0xd0, 0x66, 0x3a, 0x4d, 0x36, 0xc9, 0x93, 0x90, 0xb2}}
	return a, nil
}

var _assetsRouterDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x95\x41\x6f\xea\x48\x0c\xc7\xef\x7c\x0a\xeb\x71\x66\xa1\xaf\xdd\x6a\x37\x37\x04\xe9\x0a\xa9\x94\x08\xd2\x5e\xd1\x74\x62\xc0\xea\x64\x66\xd6\x76\xa8\xb2\x9f\x7e\x95\x40\x5b\xc2\xd2\xaa\x7b\x78\x9c\xa2\xf1\xdf\x7f\xff\x9c\xd8\x43\x1f\xa6\x18\x5d\xa8\x4b\xf4\x0a\xaf\xa4\x3b\x28\x70\x63\x2a\xa7\xb0\x37\xae\x42\xe9\xf5\x61\xe6\xb7\x8c\x22\x30\x09\x5e\x39\x38\x87\x0c\x12\xd1\xd2\x86\xec\x51\x04\x86\x11\x4c\x8c\x8e\xb0\x00\xa3\xc0\x95\x57\x2a\xf1\xb7\xde\x0b\xf9\x22\x39\xa9\xd0\x33\x91\x9e\x90\x85\x82\x4f\x9a\x04\x19\xee\xaf\x7a\x7d\xf0\xa6\x44\x30\xbe\x68\x1f\x24\x1a\x8b\xad\xa3\xa0\x76\xdc\x9a\xaa\x49\x0f\x20\x72\x68\x89\xa6\x68\x0a\x47\x1e\x57\x68\x83\x2f\x24\x81\xdb\xd1\xa8\x07\xa0\x58\x46\x67\x14\x1b\x29\xc0\x5b\x52\xfb\x8c\xbc\x27\x8b\x63\x6b\x43\xe5\xf5\xc1\x94\x98\x00\x87\x4a\x91\x8f\x82\x3e\xf8\x50\xe0\x0a\x1d\x5a\x0d\x0c\x24\xff\x61\x38\xe8\x22\x53\x60\xd2\x7a\xe2\x8c\xc8\xc1\x47\x6a\x51\x2c\x07\xd6\x55\xa2\xc8\x03\xcb\xa4\x64\x8d\x3b\x26\xd8\xe0\xd5\x90\x47\x96\x37\x16\x80\x41\xdb\xee\x19\xc1\x81\x82\x4a\xb3\xc5\xcf\xcb\x37\xbf\x56\x92\x55\xce\x65\xc1\x91\xad\x13\x98\x6d\x1e\x82\x66\x8c\xd2\xbc\xe7\x0f\x9d\x22\x97\xe4\x8d\x52\xf0\x73\x14\x69\x92\x8e\x09\x77\xc6\xb9\x67\x63\x5f\xf2\x70\x1f\xb6\xb2\xf0\x29\x73\x38\xc5\x88\x81\xf5\x04\xf7\x03\x78\xa7\x1a\x4f\x8e\x4f\xba\xcb\x02\x6b\x02\x7f\x8c\x3a\xd1\xc8\x41\x83\x0d\x2e\x81\x7c\x92\x7d\x62\x27\x5f\xf9\xdd\xdc\x5c\xff\x2f\xc3\x12\x95\xc9\x7e\x69\x79\xf5\xe7\xf5\xed\xb7\x3c\xfb\x30\x47\xde\x9e\x8d\xf5\x47\x18\xfd\x3e\xe9\xa8\x45\x8d\x0a\x54\x82\xfc\x3e\xd4\xd1\x88\xbc\x06\x2e\xda\x99\xde\xa2\x47\x36\xda\x31\xbc\xd0\xc2\x2a\x1f\xe7\xab\x75\xb6\x58\xe6\x1d\xca\x76\xdd\x12\xf8\xd1\xe0\xff\xb8\x90\xb6\x5c\x3c\xe6\xe9\x72\xbd\x4a\x97\x4f\xb3\x49\xba\x7e\x18\xcf\xd3\x55\x36\x9e\xa4\x97\x4c\x42\x44\x2f\x3b\xda\xe8\x80\x0e\x0b\x7e\xc1\x6f\x9a\xde\x8d\x1f\xef\xf3\xf5\x24\x5d\xe6\xb3\xbb\xd9\x64\x9c\xa7\xeb\xe9\x6c\x79\xc9\x6e\x88\x6a\x87\xf1\x85\x86\xea\x64\x18\x99\xf6\x46\x4f\x1b\x73\xb4\x47\x8f\x22\x19\x87\x67\x4c\x3a\x06\xe4\x49\xc9\xb8\x29\x3a\x53\xbf\xaf\xf2\x55\x77\x86\x9a\x19\xf9\x0b\xb5\x9b\x08\x10\x8d\xee\x12\x18\xee\xd0\x38\xdd\xfd\x73\x1e\xbc\xf4\xa5\x19\x4d\x41\xbf\x1a\x64\xd8\x54\xa9\xbf\x87\x23\xa1\x62\x8b\xd2\x35\x64\xfc\xbb\x42\x51\x39\x2f\x63\x63\xd5\x10\x8d\xca\xb3\xf3\x12\xcb\xc0\x75\x02\x3f\x7f\xbf\x9d\xd3\x49\x6c\x1f\x5c\x55\xe2\xbc\xb9\xed\xce\x36\xb9\x6c\xce\xb2\x03\xf5\xd7\x5f\x0e\x8e\xb3\x70\xfc\x5f\x18\x58\x64\x6d\xee\xfe\x73\x55\xd3\xf3\xc2\xbb\x3a\x01\xe5\xea\x2d\x74\x00\x78\xaf\x3d\xf8\x86\x97\xa0\xe5\xee\x0b\x3e\xaa\xe7\xa1\xc0\x04\x6e\x7e\x8e\x3a\x0b\xb7\x6a\xe5\xcd\x1d\xdc\xbd\x2f\x07\x87\x55\xfd\x37\x00\x00\xff\xff\xc6\x3b\xf5\x23\xe0\x06\x00\x00")

func assetsRouterDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterDeploymentYaml,
		"assets/router/deployment.yaml",
	)
}

func assetsRouterDeploymentYaml() (*asset, error) {
	bytes, err := assetsRouterDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/deployment.yaml", size: 1760, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x95, 0xae, 0xdd, 0xfc, 0xcf, 0xfb, 0x9e, 0x6a, 0x40, 0x54, 0xc3, 0x32, 0x6a, 0x41, 0xf4, 0xdf, 0xec, 0xfc, 0x28, 0xfd, 0x94, 0xab, 0xf5, 0x8c, 0xb4, 0x26, 0xb, 0x57, 0x70, 0x30, 0xba, 0x1c}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xc1\x4a\xc4\x40\x0c\x86\xef\xf3\x14\x79\x81\x56\xbc\x2d\x73\x53\x0f\xde\x57\xf0\x9e\x9d\xa6\x36\xb6\x93\x0c\x49\xa6\x07\x9f\x5e\x8a\x22\xc2\x42\xaf\x81\x7c\xdf\xff\xad\x2c\x53\x86\x97\xad\x7b\x90\x5d\x75\xa3\x67\x96\x89\xe5\x23\x61\xe3\x77\x32\x67\x95\x0c\x76\xc3\x32\x62\x8f\x45\x8d\xbf\x30\x58\x65\x5c\x2f\x3e\xb2\x3e\xec\x8f\xa9\x52\xe0\x84\x81\x39\x01\x08\x56\xca\x60\xda\x83\x6c\xa8\x2a\x1c\x6a\x07\xcc\xfb\xed\x93\x4a\x78\x4e\x03\xfc\x18\xdf\xc8\x76\x2e\xf4\x54\x8a\x76\x89\xbf\xd7\x66\x5a\x29\x16\xea\x3e\xac\x17\xff\x3d\x7b\xc3\x42\x19\xb4\x91\xf8\xc2\x73\xfc\x27\x9b\x6e\x74\xa5\xf9\x90\xdf\xa5\x9c\x0c\x02\xc0\xc6\xaf\xa6\xbd\x9d\xd4\xa5\xef\x00\x00\x00\xff\xff\x7f\xc0\x4a\x40\x1d\x01\x00\x00")

func assetsRouterMetricsClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleBindingYaml,
		"assets/router/metrics/cluster-role-binding.yaml",
	)
}

func assetsRouterMetricsClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role-binding.yaml", size: 285, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0xce, 0x4e, 0xd1, 0x37, 0xde, 0x79, 0x91, 0x5c, 0x71, 0xd1, 0x88, 0x1b, 0xdb, 0xaf, 0x1, 0xe5, 0x8c, 0x81, 0xb3, 0xfd, 0x30, 0xe3, 0x5d, 0xb0, 0x59, 0x8b, 0x2a, 0x47, 0xf9, 0xa0, 0xdf}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xce\xb1\x4e\xc4\x40\x0c\x84\xe1\x7e\x9f\xc2\x12\x75\x72\xa2\x43\x69\x29\xe8\x29\xe8\x9d\xec\x70\xb1\x2e\x6b\xaf\x6c\xef\x49\xf0\xf4\xe8\x44\x90\xa8\xe7\x93\xfe\x79\xa2\xd7\x63\x44\xc2\xc9\xed\x40\x90\x02\x15\x95\xd6\x2f\xea\x6e\x0d\xb9\x63\x04\xa5\x51\x6c\xce\x1d\xe4\x36\x1e\xb6\x21\x5d\xb6\x20\x68\xed\x26\x9a\x85\xbb\x7c\xc0\x43\x4c\x17\xf2\x95\xb7\x99\x47\xee\xe6\xf2\xcd\x29\xa6\xf3\xed\x25\x66\xb1\xcb\xfd\xb9\xdc\x44\xeb\xf2\xd7\x7c\xb7\x03\xa5\x21\xb9\x72\xf2\x52\x88\x94\x1b\x96\x33\x32\x35\x53\x49\x73\xd1\x6b\xf1\x71\x20\x96\x32\x11\x77\x79\x73\x1b\x3d\x1e\x7a\xfa\x95\xb3\x75\x68\xec\xf2\x99\xb3\x58\x21\x72\x84\x0d\xdf\xf0\xdf\x78\x5c\xce\xcf\x85\xe8\x0e\x5f\xcf\xf1\x8a\x2c\x3f\x01\x00\x00\xff\xff\x4f\xd5\xdf\xe0\x03\x01\x00\x00")

func assetsRouterMetricsClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleYaml,
		"assets/router/metrics/cluster-role.yaml",
	)
}

func assetsRouterMetricsClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role.yaml", size: 259, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0x77, 0x73, 0x9c, 0x6, 0x33, 0xf2, 0x91, 0x6f, 0x3b, 0x35, 0x49, 0xf3, 0xa5, 0xfc, 0x1d, 0x2e, 0x2e, 0xa6, 0x5b, 0x95, 0xa6, 0x7e, 0x8d, 0xfe, 0x7e, 0xf4, 0x62, 0x30, 0xa5, 0x37, 0x61}}
	return a, nil
}

var _assetsRouterMetricsRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\x31\x4e\xc5\x40\x0c\x04\xd0\x7e\x4f\xe1\x0b\x24\x88\xee\x6b\x3b\x68\xe8\x3f\x12\xbd\xb3\x71\x12\x93\xac\xbd\xb2\xbd\x29\x38\x3d\x42\x8a\x44\x05\xd2\x6f\x47\x33\x9a\x87\x8d\x3f\xc8\x9c\x55\x32\xd8\x84\x65\xc4\x1e\x9b\x1a\x7f\x61\xb0\xca\xb8\xdf\x7c\x64\x7d\x3a\x9f\xd3\xce\x32\x67\xb8\xeb\x41\xaf\x2c\x33\xcb\x9a\x2a\x05\xce\x18\x98\x13\x80\x60\xa5\x0c\xcd\xb4\x52\x6c\xd4\x7d\xd8\x6f\x7e\xc5\xde\xb0\x50\x06\x6d\x24\xbe\xf1\x12\x03\xcb\x6a\xe4\x9e\x4c\x0f\xba\xd3\xf2\x33\xc7\xc6\x6f\xa6\xbd\xfd\x63\x48\x00\xbf\x84\xbf\x1e\xbd\x4f\x9f\x54\xc2\x73\x1a\xae\xf6\x3b\xd9\xc9\x85\x5e\x4a\xd1\x2e\xf1\xa0\xb4\xaa\x70\xa8\xb1\xac\x90\xbe\x03\x00\x00\xff\xff\x15\x9f\x30\x56\x29\x01\x00\x00")

func assetsRouterMetricsRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleBindingYaml,
		"assets/router/metrics/role-binding.yaml",
	)
}

func assetsRouterMetricsRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role-binding.yaml", size: 297, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0xef, 0x8, 0xfb, 0x1f, 0xa3, 0xc7, 0xfb, 0xbc, 0x6, 0x78, 0xad, 0x0, 0x28, 0x90, 0xc8, 0xe8, 0xf5, 0x7d, 0xf8, 0xd0, 0xeb, 0x52, 0xf, 0xd4, 0x81, 0xce, 0x69, 0xb8, 0x8c, 0x26, 0x8c}}
	return a, nil
}

var _assetsRouterMetricsRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\x91\x37\x3b\x0f\xdd\x02\xfd\x40\xf7\x0e\xdd\x19\xe9\x36\x26\x62\x8b\x02\x49\xb9\x68\xbf\xbe\x88\xe3\x02\x9d\x78\xef\x01\xc1\xc3\x7f\xf4\xa6\x0b\x9c\x1a\x50\x51\xe9\xfa\x45\xdd\x74\x45\xcc\x18\x4e\xa1\xe4\xc5\xb8\x83\x4c\x47\xc0\x68\x45\x98\x14\x27\xb4\xda\x55\x5a\x24\xee\xf2\x0e\x73\xd1\x96\xc9\xae\x5c\xce\x3c\x62\x56\x93\x6f\x0e\xd1\x76\xbe\x5f\xfc\x2c\xfa\x7f\x7b\x49\x77\x69\x35\xef\xae\xb4\x22\xb8\x72\x70\x4e\x44\x8d\x57\xe4\x3f\xca\xe9\x7e\xf1\x03\x7b\xe7\x82\x4c\xda\xd1\x7c\x96\x8f\x98\xa4\xdd\x0c\xee\xc9\xc6\x02\xcf\x69\x22\xee\xf2\x6a\x3a\xba\x3f\x2e\x4d\x74\x3a\x25\x22\x83\xeb\xb0\x82\x83\x39\x6c\x93\x02\xdf\xcb\xef\xd7\xcf\xd6\xb5\x3e\xc2\x06\xbb\x1e\xcb\x37\xc4\x3e\x17\xf1\x67\xf8\xe4\x28\x73\xfa\x09\x00\x00\xff\xff\x67\x78\x6f\x08\x23\x01\x00\x00")

func assetsRouterMetricsRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleYaml,
		"assets/router/metrics/role.yaml",
	)
}

func assetsRouterMetricsRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role.yaml", size: 291, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x57, 0xe3, 0x68, 0x2c, 0xfd, 0xf1, 0x27, 0x9d, 0xa0, 0x3b, 0x10, 0x3e, 0xca, 0x3b, 0x76, 0x39, 0xf4, 0xb1, 0x37, 0x7b, 0xa3, 0xa7, 0x11, 0xc0, 0x6, 0x4b, 0x47, 0xbb, 0x93, 0x4b, 0xb7, 0xc2}}
	return a, nil
}

var _assetsRouterNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcf\xb1\x4e\xc3\x50\x0c\x85\xe1\x3d\x4f\x71\x14\xe6\x14\xb1\xde\x77\x80\x05\x89\xdd\xbd\x71\x53\x93\x1b\x3b\xb2\x9d\x56\xbc\x3d\xa2\x05\x51\x84\x3a\xfb\xd3\x2f\x9f\x59\x74\x2c\x78\xa1\x85\x63\xa5\xca\x1d\xad\xf2\xc6\x1e\x62\x5a\x70\x7a\xea\x16\x4e\x1a\x29\xa9\x74\x80\xd2\xc2\x05\xb6\xb2\xc6\x51\x0e\x39\x88\x4e\xce\x11\x1d\x40\xaa\x96\x94\x62\x1a\x5f\x10\xbf\x68\x27\xf6\xa8\x36\xf2\x10\xdc\xb8\xa6\x79\x41\xdf\x77\x40\xa3\x3d\xb7\x6f\xfc\x00\x6a\xcd\xce\x37\xe5\xc5\x54\xd2\x5c\x74\x42\x1a\x9a\xd9\x8c\x83\x39\x5e\xd9\x4f\x52\xf9\xf9\x7a\x85\xed\xdf\xb9\x66\x40\x14\x79\x94\xb8\xfc\x77\x1d\xf1\xef\x85\xda\xb6\x48\xf6\x9b\x70\x41\x9f\xbe\x71\x7f\xb1\xf7\x97\x01\xca\x79\x36\x9f\x77\x7f\x7a\xab\x35\xa9\x1f\xc3\xe4\xb6\xad\x05\x3f\xfc\x33\x00\x00\xff\xff\xfc\x31\x60\x23\x4c\x01\x00\x00")

func assetsRouterNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterNamespaceYaml,
		"assets/router/namespace.yaml",
	)
}

func assetsRouterNamespaceYaml() (*asset, error) {
	bytes, err := assetsRouterNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/namespace.yaml", size: 332, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x83, 0xe3, 0x8d, 0x5c, 0x13, 0x8b, 0x1, 0x55, 0x92, 0x5, 0xf, 0xe, 0x67, 0x18, 0xd5, 0xb5, 0xcd, 0x7f, 0x3c, 0x8, 0x6d, 0x82, 0x43, 0xd5, 0x94, 0x6a, 0x16, 0x59, 0x51, 0x20, 0xc9, 0x5f}}
	return a, nil
}

var _assetsRouterServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xce\xb1\x4e\xc4\x30\x10\x84\xe1\xde\x4f\x31\xd2\xd5\x9c\x44\xeb\x8e\x92\x16\x24\x7a\xb3\x99\xbb\x5b\x91\x78\xcd\xee\x3a\x88\xb7\x47\x41\x29\xa7\x98\x5f\xdf\x05\x2f\x22\x36\x7b\xe2\x66\x0e\xb7\x99\xf4\x80\x38\x5b\x72\xc1\xe7\x2f\xf2\x41\xd8\xa0\xb7\x34\xbf\xe2\x35\xf1\xa3\xeb\x0a\xe7\xf7\x54\x27\x64\x9d\x91\x74\x84\xd8\xe0\x52\x2e\x18\xf4\x4d\x23\xd4\x7a\xc0\xb9\xfe\x57\xd2\xf0\x76\x84\x31\xdc\x84\x11\xda\xef\xd7\xf2\xa5\x7d\xa9\x78\xa7\xef\x2a\x3c\x0d\xa5\x0d\xfd\xa0\x1f\xef\x8a\xfd\xb9\x6c\xcc\xb6\xb4\x6c\xb5\x00\xbd\x6d\xac\x27\xf0\x9c\x31\x9a\xb0\x1e\xba\x1e\x0f\xbd\xe5\x93\xf6\xbb\x33\xa2\xfc\x05\x00\x00\xff\xff\x33\xdc\xda\x8c\xd5\x00\x00\x00")

func assetsRouterServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceAccountYaml,
		"assets/router/service-account.yaml",
	)
}

func assetsRouterServiceAccountYaml() (*asset, error) {
	bytes, err := assetsRouterServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-account.yaml", size: 213, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0xe3, 0x6, 0x3a, 0x88, 0x2e, 0x33, 0xe3, 0x24, 0xf0, 0xf0, 0xe9, 0x43, 0xc8, 0x46, 0x6c, 0x60, 0x9, 0x69, 0x84, 0x3, 0xd8, 0xc3, 0x80, 0xb, 0xab, 0x37, 0x13, 0xce, 0xf2, 0xeb, 0x60}}
	return a, nil
}

var _assetsRouterServiceCloudYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x6b\x14\x41\x10\x85\xef\xfd\x2b\x1e\xec\x39\x41\x31\x07\x99\x63\x72\x12\x82\x2c\xb8\x78\xaf\xf4\xd4\xec\x34\xe9\xa9\x6a\xaa\x6a\x56\xf7\xdf\xcb\xf4\xec\x82\xa2\x78\xec\x07\xf5\xfa\x7b\xdf\x01\xaf\x4a\x23\x9e\xa9\x92\x64\x36\x7c\x63\xbb\x94\xcc\x08\x45\xab\x94\x19\x45\x30\x99\x4a\x40\x27\xc4\xcc\x30\x5d\x83\x6d\x8b\x73\xd5\x75\x04\xcb\xa5\x98\xca\xc2\x12\xfe\x98\x0e\xf8\x22\x67\x63\x77\xbc\xa8\x84\x69\xad\x6c\xf0\xc6\xb9\x4c\x25\xe3\x42\x75\x65\x07\x19\x83\x5a\xab\x85\x47\x50\xc0\x56\x89\xb2\xf0\x63\x7a\x2f\x32\x0e\x77\x82\x44\xad\x7c\x67\xf3\xa2\x32\xe0\xf2\x31\x2d\x1c\x34\x52\xd0\x90\x80\x03\xbe\xd2\xc2\x28\x0e\xe7\xf8\xa3\x02\x10\x5a\xd8\x1b\x65\x1e\xa0\x8d\xc5\xe7\x32\xc5\x43\xd9\xa1\x12\x50\xe9\x8d\xab\x6f\x25\xd8\x18\x86\xdb\x9e\xb4\x31\x6e\x69\x5c\x1b\x0f\xdd\xc9\x5d\x49\x02\x9c\x2b\xe7\x50\xfb\xfb\x6c\x63\x39\xcd\xc5\x41\xd5\x15\x33\x79\x77\xc4\xd3\xc4\xb9\x1b\x5b\xc8\xde\x8b\x9c\xf1\xfa\x8c\xa6\x5a\x11\x64\x67\x0e\x07\x39\x56\x99\x99\x6a\xcc\x57\xfc\x98\x59\x20\xda\xcb\x6e\x7a\x9b\x8e\xbb\xa7\x66\xec\xbc\xd9\x17\x10\x44\x47\xc6\x1b\xcf\x45\xc6\xfe\x8f\xef\xaa\xb6\xd9\xfc\x33\xd8\x84\xea\xc9\x68\x9a\x4a\x3e\x6a\x2d\xf9\xba\x0d\xc9\x54\x13\xd0\xd4\xa2\xaf\x7e\xe8\x82\x06\xcc\x11\xad\xaf\x69\xa6\xa1\x59\xeb\x80\xd3\xcb\x71\x4f\xd4\x62\xc0\xe7\x0f\xfd\xb1\x03\x1f\x7b\x74\xbb\xf9\xbd\xc2\xff\xdb\xf1\xf4\xf4\xe9\x9f\x25\x9e\x7e\x05\x00\x00\xff\xff\x56\xdc\x0d\xe9\x77\x02\x00\x00")

func assetsRouterServiceCloudYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceCloudYaml,
		"assets/router/service-cloud.yaml",
	)
}

func assetsRouterServiceCloudYaml() (*asset, error) {
	bytes, err := assetsRouterServiceCloudYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-cloud.yaml", size: 631, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcd, 0x97, 0xc4, 0xab, 0x8b, 0xa9, 0xa1, 0x47, 0xf7, 0xf, 0xeb, 0x38, 0x1b, 0xc2, 0xf7, 0x8c, 0xd9, 0xba, 0x35, 0x9b, 0x1, 0x67, 0x26, 0xd7, 0x3f, 0x6d, 0xa5, 0x5f, 0xf0, 0x92, 0x84, 0x8f}}
	return a, nil
}

var _assetsRouterServiceInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\x31\x6b\xfb\x30\x10\x05\xf0\x5d\x9f\xe2\x41\xd6\xff\xbf\x34\x24\x94\x56\xab\xa7\x6c\x86\x96\xee\x87\x7c\x49\x8e\xca\x92\xb8\x3b\xbb\xf4\xdb\x97\x38\x0d\xb8\x74\xc9\x22\x90\xee\xe9\xf7\xb8\x0d\xba\x3c\x99\xb3\xe2\x95\x75\x96\xc4\xf8\x14\x3f\x63\xe0\x23\x4d\xd9\x31\x53\x9e\xd8\xc2\x06\x87\x72\x52\x36\x43\x57\x8b\x6b\xcd\x99\x15\xd6\x38\xc9\x51\x12\xa8\x94\xea\xe4\x52\x8b\x81\x94\x41\xad\x65\xe1\x01\xe4\xd0\xa9\xb8\x8c\xfc\x10\x3e\xa4\x0c\xf1\xd6\x11\xa8\xc9\x3b\xab\x49\x2d\x11\xf3\x36\x6c\x50\x68\xe4\x7f\xcb\x69\x8d\x12\x83\xca\xf0\x87\x35\xf6\x5f\xe4\xa5\x3f\x06\xc0\xbf\x1a\xc7\xdb\x1a\x87\x3e\x00\xad\xaa\xdb\x65\xf4\x7f\x21\x23\xce\xee\x2d\x00\xd7\x49\xc4\xf3\xe3\xf5\xa2\xd5\x6b\xaa\x39\xe2\xad\xeb\x97\x17\x27\x3d\xb1\xf7\x4b\xe8\xe7\xcf\x9a\xb0\x95\xb1\xdf\xef\xee\x44\x6c\xa5\x8c\xec\x2a\x69\xed\x6c\x5f\x76\x4f\x77\x40\x4b\xec\x3b\x00\x00\xff\xff\x90\x5e\x33\xca\xad\x01\x00\x00")

func assetsRouterServiceInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceInternalYaml,
		"assets/router/service-internal.yaml",
	)
}

func assetsRouterServiceInternalYaml() (*asset, error) {
	bytes, err := assetsRouterServiceInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-internal.yaml", size: 429, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x63, 0x52, 0x85, 0x8b, 0x99, 0xe6, 0xc7, 0xcb, 0x34, 0x3d, 0x8d, 0x43, 0x65, 0x10, 0x63, 0x51, 0x80, 0xc1, 0x29, 0x17, 0xb6, 0x8f, 0x84, 0xdc, 0xf8, 0x33, 0xa1, 0x21, 0xc2, 0x5a, 0x4f}}
	return a, nil
}

var _manifests00ClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x55\x4d\x8f\x13\x31\x0c\xbd\xcf\xaf\x88\xb6\x37\xa4\x4e\xc5\x0d\xf5\x86\x40\xe2\x04\x2b\x21\xc4\x3d\x4d\x3c\x1d\xd3\x4c\x1c\xd9\x4e\x4b\xf9\xf5\x68\xbe\x76\xd9\xe9\x6c\x3b\xc0\xc2\x69\xc6\x8e\xf3\xfc\x62\x3f\x27\x2b\xf3\x2e\x64\x51\x60\xc3\x14\xc0\x54\xc4\x46\x6b\x30\x94\x80\xad\x12\x1b\x54\x81\x50\x95\xc5\xca\x7c\xb9\x7f\x7f\xbf\x35\x6f\x4d\x20\x35\x54\xb5\x51\x02\x46\x6a\xca\xc1\x9b\x1d\x18\x86\x14\xac\x03\x6f\x76\xe7\x0e\x4a\x0c\xc6\x0e\x2a\xda\x06\x24\x59\x07\xd2\xa1\x9f\x6a\x74\x75\xb1\x7a\x9a\xc5\x3a\xcd\x36\x84\xb3\x89\x00\x5e\x8c\x75\x0e\x44\xca\xe2\x80\xd1\x6f\x47\x82\x9f\x29\x40\x61\x13\x7e\x05\x16\xa4\xb8\x35\xbc\xb3\xae\xb4\x59\x6b\x62\xfc\x61\x15\x29\x96\x87\x37\x52\x22\x6d\x8e\xaf\x8b\x06\xd4\x7a\xab\x76\x5b\x98\x8e\xc1\xb6\x4d\x16\xa5\xc6\x4a\xd7\x18\xf7\x0c\x22\xeb\x31\x7d\xc1\x39\x80\x6c\x8b\xb5\xb1\x09\x3f\x30\xe5\x24\xed\xb6\xb5\xb9\xbb\x2b\x8c\x61\x10\xca\xec\x60\xf0\x39\x8a\x15\xee\x1b\x9b\xa4\x33\x1f\x4f\xd7\x99\x02\x7c\x44\x07\xd6\x39\xca\x51\x7b\x1f\x44\x9f\x08\x47\x6b\x88\x18\x0d\xc7\x30\x2c\x24\xf2\x43\xfc\x11\xfa\xe0\x23\xf0\x6e\x64\xf2\xea\xae\xb8\xe4\x67\x53\xc7\x62\xc2\xd0\x43\x0a\x74\x6e\x96\x82\x24\x0a\xe8\xce\x97\x30\x89\xbc\x47\xe1\x9c\xda\xca\xee\xb2\xdf\xc3\x32\xbc\x86\x22\x2a\x31\xc6\x7d\xe9\x88\x81\xa4\x74\xd4\x5c\xc2\x0f\x75\x18\xa2\x27\xc8\x8e\xc1\x2a\x74\xbf\x7b\xd0\xee\x9b\x93\x6f\x5d\x97\xf9\x9e\x95\xc1\x4c\xef\x7a\x25\x75\xf2\x9c\x3a\x76\x18\x3d\xc6\x7d\xef\x7f\x8c\x98\x2c\x5d\xe7\x18\x50\xfa\x9f\x93\x55\x57\xcf\x70\x1d\x15\x57\x3e\x88\x71\x96\xe7\x20\x50\x47\x51\x99\x42\x00\x96\x67\xdc\x1b\x51\xab\x79\x51\x5b\x86\xcd\xe5\x42\x0a\x3e\x0a\x83\x23\x1e\x34\xf9\x68\xfe\x46\xca\x7e\x54\x6e\x9e\xb5\x62\x2b\xca\xd9\x69\x66\x78\x72\x50\x78\xc8\x3d\xfc\xd9\x84\xad\x6c\x60\x2a\x97\xb6\xfe\x7f\x98\x7e\x50\xc0\x58\x95\xeb\x3d\x7e\xa1\x1c\xb3\x25\x1c\xf5\xbd\x32\x1f\x91\x99\x18\xbc\xa9\x98\x1a\x63\x45\x40\x65\xc3\x94\x15\x78\xd3\x80\x32\x3a\xd9\x0c\x90\xeb\x56\x9e\xe5\xd9\x36\x61\x66\x2e\xda\x1d\x37\x98\xf5\xa8\x32\xc2\xce\x54\xf5\x3a\x9d\x05\x34\xda\xc9\x84\xa8\xe8\xae\x8f\xa6\xd2\x01\x22\xc3\x11\xe1\x34\xdf\x83\x97\x61\x72\xfb\x8e\x90\xbc\xfb\x06\x4e\xfb\x27\xe8\xdf\x12\x5a\xdc\xa1\x09\x81\xe9\x35\xf3\x1f\x89\xfc\x85\x74\x17\xf0\x10\x70\x99\x51\xcf\x37\xa8\x8c\x61\xed\x45\x08\xdf\xd5\x51\x14\x65\x8b\x17\xef\x5d\x16\xf8\x65\xf3\xa7\xf6\xa5\xee\x17\x6a\x12\x8d\xa0\x27\xe2\x43\xf1\x33\x00\x00\xff\xff\x14\x68\xb5\xf3\x01\x09\x00\x00")

func manifests00ClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00ClusterRoleYaml,
		"manifests/00-cluster-role.yaml",
	)
}

func manifests00ClusterRoleYaml() (*asset, error) {
	bytes, err := manifests00ClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-cluster-role.yaml", size: 2305, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfc, 0xaa, 0xc3, 0x8a, 0xd5, 0x5a, 0xc9, 0xb5, 0xff, 0x27, 0xa7, 0x81, 0xf3, 0xa6, 0x2d, 0xc8, 0xca, 0x77, 0x4b, 0x2d, 0xaa, 0x61, 0x67, 0x62, 0x4, 0x5, 0xc8, 0xe8, 0x3d, 0x52, 0x28, 0x2f}}
	return a, nil
}

var _manifests00CustomResourceDefinitionInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x5f\x6f\xdb\x36\x10\x7f\xf7\xa7\x38\xa4\x0f\x7d\xb1\x24\xa4\xd9\x86\xc1\xc0\x30\x04\x49\x31\x04\x6b\x83\x22\x31\xb2\x61\x59\x80\xd2\xe4\x49\xe6\x2a\x91\x2a\xef\xe4\x2c\x19\xf6\xdd\x87\xa3\x2c\xff\x51\x2d\xc5\xeb\x30\xbe\x24\x3a\x9e\xee\x7e\xfc\xdd\x1f\x9e\x35\x49\x92\x64\xa2\x6a\x7b\x87\x81\xac\x77\x33\x50\xb5\xc5\x3f\x19\x9d\x3c\x51\xfa\xe9\x7b\x4a\xad\xcf\x56\xa7\x0b\x64\x75\x3a\xf9\x64\x9d\x99\xc1\x45\x43\xec\xab\x1b\x24\xdf\x04\x8d\x97\x98\x5b\x67\xd9\x7a\x37\xa9\x90\x95\x51\xac\x66\x13\x00\x1d\x50\x89\x70\x6e\x2b\x24\x56\x55\x3d\x03\xd7\x94\xe5\x04\xc0\xa9\x0a\x67\x60\x1c\x05\xd4\x3e\x18\x4a\xad\x2b\x02\x12\xa5\xbe\xc6\xa0\xd8\x07\xf9\xc7\xd1\xd2\xe6\x9c\x5a\x3f\xa1\x1a\xb5\x18\x2c\x82\x6f\xea\x19\x8c\x2b\xb7\xd6\x49\xf4\x01\x5a\xb4\x97\xd7\xb7\x37\xd1\x51\x94\x95\x96\xf8\xe7\x7d\xf9\x3b\x4b\x1c\xf7\xea\xb2\x09\xaa\xdc\x85\x16\xc5\x64\x5d\xd1\x94\x2a\xec\x6c\x4c\x00\x48\xfb\x1a\x67\x70\x72\x22\xff\x37\x8b\xb0\x66\x63\xed\x9a\x58\x71\x43\x33\xf8\xeb\xef\x09\xc0\x4a\x95\xd6\x44\x32\xda\x4d\x41\x7c\xfe\xe1\xea\xee\xec\x56\x2f\xb1\x52\xad\x10\xc0\x20\xe9\x60\xeb\xa8\xb7\x45\x07\x01\xeb\x80\x84\x8e\x09\x94\x88\xa1\x85\x90\xae\xdf\xaa\x83\x30\xc1\xb6\xf3\x2c\x6b\x27\x9e\x1b\x59\xcf\xfe\x6b\x01\xd0\xea\x80\x91\x08\x22\x01\x2f\x11\x56\xad\x0c\x0d\x50\x04\x07\x3e\x07\x5e\x5a\xda\xc2\x88\x07\xd9\x31\x0b\xa2\xa2\x1c\xf8\xc5\x1f\xa8\x39\x85\x5b\x0c\x62\x04\x68\xe9\x9b\xd2\x80\xf6\x6e\x85\x81\x23\xea\xc2\xd9\xe7\x8d\x65\x02\xf6\xd1\x65\xa9\x18\xd7\x11\xe8\x96\x75\x8c\xc1\xa9\x52\xa8\x6b\x70\x0a\xca\x19\xa8\xd4\x13\x04\x14\x1f\xd0\xb8\x1d\x6b\x51\x85\x52\x78\xef\x03\x82\x75\xb9\x9f\xc1\x92\xb9\xa6\x59\x96\x15\x96\xbb\x0c\xd6\xbe\xaa\x1a\x67\xf9\x29\xd3\xde\x71\xb0\x8b\x86\x7d\xa0\xcc\xe0\x0a\xcb\x8c\x6c\x91\xa8\xa0\x97\x96\x51\x73\x13\x30\x53\xb5\x4d\x22\x70\xc7\xb1\x0c\x2a\xf3\x6a\x13\xe0\xd7\x3b\x48\xf9\x49\x72\x80\x38\x58\x57\x6c\xc4\x31\xed\x06\x79\x97\xe4\x03\x2b\xb1\x6c\x5f\x6b\xf1\x6f\xe9\x15\x91\xb0\x72\xf3\xf6\x76\x0e\x9d\xd3\x18\x82\x7d\xce\x23\xdb\x3b\xc9\xb1\x25\x5e\x88\xb2\x2e\xc7\xd0\x06\x2e\x0f\xbe\x8a\x16\xd1\x99\xda\x5b\xc7\xf1\x41\x97\x16\xdd\x3e\xe9\xd4\x2c\x2a\xcb\x12\xe9\xcf\x0d\x12\x4b\x7c\x52\xb8\x50\xce\x79\x86\x05\x42\x53\x1b\xc5\x68\x52\xb8\x72\x70\xa1\x2a\x2c\x2f\x14\xe1\xff\x4e\xbb\x30\x4c\x89\x50\xfa\x32\xf1\xbb\xed\x67\x5f\xb1\x65\x6b\x23\xee\x5a\x4a\xb7\x0e\xd5\x50\x8c\x9c\xa3\x6b\x69\x56\x7b\xc2\x5e\x40\xe7\x4b\x84\xa5\x27\x96\xbe\xd3\x16\x0b\xee\x54\x69\xef\xcd\x83\xb0\x65\xb5\xda\xf3\xf9\xbb\x71\x5f\xf3\x77\x90\xfb\x10\x7d\x1c\xb4\x9f\xfb\x50\x29\x96\x26\xc9\xdf\x7d\x73\xd0\xb7\x54\x56\x81\xe1\x90\x73\xd9\x1f\xf3\x7e\xb3\x51\x8b\xb6\xe4\xb0\xed\x9b\x53\xc0\xb4\x48\xe1\xe2\xfa\xfc\xfd\xdb\x29\x9c\x4f\xe1\xf6\xe6\x6e\x0a\xf3\x5f\xe7\x80\xac\x8f\x65\x80\x55\x28\x90\xe9\x45\xae\xd7\x7a\x3d\x9e\x21\x66\xb6\xa4\x6c\xef\x7d\xcb\x58\x7d\x61\x74\x04\x46\xb7\xa5\x42\x50\x4f\x2f\xe6\x51\xdb\xe5\x8f\xc8\xa4\x67\xef\xfa\xa2\x41\x6c\x43\x36\xda\xa5\xbd\x33\xf1\xb6\x3d\xb8\x3b\x68\xf4\x18\xd3\xed\x2a\x15\xf1\x3c\x28\x47\xb6\xbb\xbe\x87\x75\xb7\x19\x27\xbd\x21\x61\x5b\xe1\x88\xee\x08\xe9\xdb\x55\x21\x91\x2a\x46\x7d\x1e\x65\x27\xa0\xa2\xfd\xfb\xef\xab\xcc\x7c\x19\xe2\xaf\x32\xc3\x07\x8a\xeb\x5f\x1a\x91\xb6\x6c\x03\x9a\x21\x33\xc9\x1a\xeb\xe0\xb6\xf8\x18\xd8\x3c\x98\xdd\x5f\x2a\xf4\x8b\xa2\x5b\xc6\xd1\x6f\xde\x0d\x1c\xb0\x3f\xd6\x88\xa6\x5c\x80\x0d\xa1\x91\x11\xa0\x9d\x3e\xd6\xb3\x8d\x74\x52\x34\xb1\x5c\x52\x38\x8f\x7f\x07\x20\x6b\xe5\xe4\x56\xb2\x46\x2e\x8b\xdc\xa2\x81\xc5\x93\x8c\x21\x57\x97\x20\x1d\x52\x15\x94\x1e\x7c\xf3\xe5\x12\xb0\x83\x14\xf7\x0e\x73\x62\xe3\x4d\x2e\x9d\x68\x03\x43\x9a\xb3\xe2\x0e\x5d\x77\xc6\xdc\xba\x7e\xab\xde\x5d\x5d\x2f\xdb\x3b\xfd\xef\x0e\xbc\x83\xf3\x5f\x6e\xe3\x73\x67\x31\x47\xd6\x4b\x34\xd0\xd0\x58\xba\x01\x7c\xbc\xba\xfc\x08\x8a\x40\x20\x3a\xb8\x3f\x7d\x88\xc6\x9e\x9b\x80\xc3\xe6\xe2\x4b\x23\x36\x95\x4c\x2d\x75\xc0\xc4\x20\x63\xa8\xac\x4c\x89\xf1\xda\x13\x0f\x6f\x1e\xa6\xe2\xe2\xa7\x8b\x0f\x87\x1c\x8c\x58\xdd\xba\x1e\x77\x70\xf6\x10\x39\xb9\x3f\x7d\xd8\x4e\x1a\xc6\x6b\x4a\xd5\x23\xa5\xaa\x52\xcf\xde\xa5\xda\x57\x99\x2e\x6d\xd6\x8e\x94\x59\xc0\x1c\x03\x3a\x8d\x59\xf0\x0d\xe3\xb7\x67\x59\x81\x9c\xb4\x2c\x27\x91\xe5\x25\x57\xe5\x2b\x1f\xe3\x39\x54\x38\xb2\xee\xdf\xf4\x9d\x56\x56\x07\x4f\x3e\xe7\xe8\x13\x5d\xd2\x50\xf4\xac\x84\xe2\xcc\x21\x3f\xfa\xf0\x29\x33\x8e\x32\xf1\xf3\xe3\xca\xe2\xe3\x0f\x71\x2f\xd1\xa5\x4d\x5a\x7c\xaf\xd4\x73\xb2\xd6\x4c\x8c\xa3\x88\x28\xa1\xa5\x7f\x1c\x43\x72\xb6\x83\x44\x97\xbe\x31\x69\xe1\x7d\x51\x62\xc4\x21\xfe\x04\xde\xce\xc9\x57\xa7\x59\xa5\x9c\x2a\xd0\x48\xe1\x91\x30\x70\x32\xde\xa6\xc6\xdb\x90\x54\xd6\x70\x7d\x28\xd3\x5e\x4e\xaa\xfc\x70\xc4\x55\x73\x64\xf3\xdc\x2f\x3a\x01\xd0\xaf\xaf\xcf\x0d\x86\xa7\x83\x65\x34\xe2\x7b\x53\x60\xd3\xcd\x9c\x1d\x7f\x63\x12\xab\xa2\xb0\xae\x50\xb5\x8d\x85\xd3\xaf\x65\xc9\xe8\xb1\x2a\x69\xf3\x7f\x9d\xd6\x73\x55\x50\x4c\x6c\x56\x45\x92\xdb\x92\x31\xd0\xf4\x3f\xe4\xf1\x00\xd0\x98\xd8\x9b\x9f\x28\x7b\x69\xfd\x52\xb4\x5f\xec\xfa\x03\x0a\xc3\xf7\x51\xd2\x5d\x08\x03\x63\xd7\x41\x83\x47\x8f\x5d\x3d\xd1\xaa\xfb\x70\xb1\x3a\xdd\x3e\xc5\x9c\x4b\xd6\x5f\x1a\xe2\x06\x00\xc9\xcf\x23\x33\x03\x0e\x0d\xae\x7f\xa3\xfb\x20\x93\x46\x2b\xd9\x5e\xf4\x4a\x6b\xac\x19\xcd\x75\xff\x4b\xc2\xc9\xc9\xde\x67\x82\xf8\xb8\x33\x8e\xc1\xfd\xc3\xa4\xb5\x8a\xe6\xae\xc3\x21\xc2\x7f\x02\x00\x00\xff\xff\xf2\x56\x01\xeb\x64\x11\x00\x00")

func manifests00CustomResourceDefinitionInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionInternalYaml,
		"manifests/00-custom-resource-definition-internal.yaml",
	)
}

func manifests00CustomResourceDefinitionInternalYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition-internal.yaml", size: 4452, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x97, 0x3b, 0x70, 0x3e, 0xf0, 0xaf, 0x5e, 0x3b, 0xac, 0xca, 0xaa, 0xe0, 0xa6, 0x36, 0x5f, 0x77, 0xf7, 0x9b, 0xd4, 0x7, 0xb4, 0xbd, 0xbe, 0x2e, 0x39, 0xff, 0xdb, 0x5e, 0x7f, 0xdd, 0x95}}
	return a, nil
}

var _manifests00CustomResourceDefinitionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x7b\x6f\x1c\x37\xb2\xef\xff\xfe\x14\x05\xe5\x0f\xdb\x7b\x47\xad\xc8\x4e\x82\x5c\xdd\xc5\x5e\x28\x92\x92\x18\xeb\xc8\x86\x47\x9b\x3d\xbb\xc7\x07\x06\xa7\xbb\x66\x86\xab\x6e\xb2\x43\xb2\x47\x9e\x2c\xf6\xbb\x1f\x14\x1f\xfd\x98\x66\x3f\x24\xdb\x07\x38\x0b\x0d\x10\xc4\x9a\x66\x17\x8b\xf5\xe2\x8f\x45\xb2\x86\x95\xfc\x57\x54\x9a\x4b\x71\x06\xac\xe4\xf8\xd1\xa0\xa0\xbf\x74\x72\xfb\xbd\x4e\xb8\x3c\xd9\x9d\xae\xd0\xb0\xd3\x27\xb7\x5c\x64\x67\x70\x51\x69\x23\x8b\x77\xa8\x65\xa5\x52\xbc\xc4\x35\x17\xdc\x70\x29\x9e\x14\x68\x58\xc6\x0c\x3b\x7b\x02\x90\x2a\x64\xf4\xe5\x0d\x2f\x50\x1b\x56\x94\x67\x20\xaa\x3c\x7f\x02\x20\x58\x81\x67\xc0\xc5\x46\xa1\xd6\xa9\x14\x46\xc9\x3c\x47\xa5\x13\x59\xa2\x62\x46\x2a\xfa\x87\xd0\x5b\xbe\x36\x09\x97\x4f\x74\x89\x29\x11\xdc\x28\x59\x95\x67\x10\x6f\xe4\xa8\x6a\x6a\x07\xe0\xb8\x7c\xe5\x3a\xb8\xa8\x3b\xb0\xcf\x72\xae\xcd\x9f\xe3\xcf\x5f\x73\x6d\x6c\x9b\x32\xaf\x14\xcb\x63\x2c\xda\xc7\x9a\x8b\x4d\x95\x33\x15\x69\xf0\x04\x40\xa7\xb2\xc4\x33\x38\x3a\x7a\x02\x50\x2a\xd4\xa8\x76\xf8\x17\x71\x2b\xe4\x9d\xf8\x91\x63\x9e\xe9\x33\x58\xb3\x5c\x23\x35\xad\x56\xca\x0b\xd1\x73\xae\x53\x96\xa3\xfb\x27\x40\xce\x56\x98\x2f\x31\xc7\xd4\x48\xf5\x96\x99\xed\x19\x24\xda\x30\x53\xe9\x44\xfb\x6f\x7d\x4b\x12\xd1\x3b\x2c\x73\x9e\x32\x1d\x1a\x96\x98\x26\xca\x7f\x17\x9a\xd9\x97\x0f\x1b\x3a\x8a\x6c\xc7\x78\xce\x56\x39\xbe\x6b\xbf\xe3\x1e\x9e\xc1\x3f\xff\xf5\x04\x60\xc7\x72\x9e\x59\x9d\x3a\x0e\x49\x01\xe7\x6f\x5f\xfd\xfa\x72\x99\x6e\xb1\x60\x81\xed\x0c\x75\xaa\x78\x69\xdb\xc1\x51\x4f\xca\xfe\xf9\x0a\x35\x30\x28\x98\x60\x1b\xcc\x82\x20\xa1\x91\x24\xac\xa5\x02\xb3\x45\x4f\x14\x20\xcd\x2b\x6d\x50\x25\x70\xb3\xc5\x76\xbb\x94\x09\x20\x21\xf3\x14\xe1\x4d\x89\x62\x49\x26\x01\xef\x64\x65\x10\x98\xc8\xe0\xcf\xd5\x0a\x95\x40\x83\x3a\x68\xbc\x26\x59\x0b\x3f\x81\xf7\x02\xfe\xba\x45\x01\x4c\xf4\xed\x02\xb8\x76\xd6\x8c\xd9\x02\x18\x08\xbc\x8b\xf0\x5b\x13\xcd\xb0\xcc\xe5\xbe\x40\x61\x5a\xef\x81\x91\xc0\xf2\x5c\xde\x01\xf9\x96\x12\x2c\x07\xa3\xd8\x7a\xcd\x53\x7a\xa2\x90\xa5\x5b\x1a\x6c\x18\x88\x06\xb3\x65\xa6\x26\x89\x1f\x4b\xa9\x31\x30\x06\x52\xf9\xe1\xb5\xf8\xff\x4b\x49\x9a\x11\x1b\x30\x5b\xae\xeb\x07\x50\xb0\x3d\xe4\xc8\x6c\xff\x19\xd7\xaa\xb2\x6a\xa9\x09\x93\x8c\xcb\x6a\x95\xf3\x14\xd6\x2c\xa5\xd7\x05\x9a\x3b\xa9\x6e\x69\x60\x02\x53\x6a\xac\x81\xe9\xc1\x51\x83\xc2\x1d\xd7\x6d\x92\xd4\xe3\x0a\xc1\x3e\xce\x40\x56\xc6\xca\x76\x6b\x4c\xa9\xcf\x4e\x4e\x6e\x6b\x65\x50\x54\xc9\x64\xaa\x4f\x52\x29\x52\x2c\x8d\x3e\x09\x63\x3f\xf6\x3c\x70\xb1\x39\xf1\x3d\x1e\x1f\xba\x20\x7d\xbc\xca\x70\x87\x0a\x4a\xa9\x35\x5f\xe5\xb8\x00\x4d\x91\x6b\x95\x23\x64\xb8\x66\x55\x6e\x74\x30\x24\x28\x73\x66\xd6\x52\x15\xc0\x14\x42\xa5\x31\x4b\x60\x89\x08\x24\xfb\x46\x20\xe4\xa1\xf6\x8d\x42\x2a\xa2\x61\x18\xcf\x75\x72\xe4\x1b\x98\x3d\xb9\xb6\x5c\xfd\x03\xd3\xa0\x9d\x52\x51\x40\x32\x3c\x78\x30\x7d\x5a\xe1\xb4\xfe\xee\xc0\x2f\x9e\x92\xe3\xb8\x36\xc4\x29\x17\x56\xe7\x08\x3b\xf7\x1d\x66\xa0\xad\x53\x81\x5c\x07\x95\xda\x60\x22\x0c\xeb\x68\xd0\xfa\xe1\x9a\xcc\xd6\x71\x45\x63\x52\x44\x04\xf4\x56\x56\x79\x46\xba\xda\xa1\x32\xa0\x30\x95\x1b\xc1\x7f\xaf\x29\x6b\xb2\x09\xea\x32\x67\x06\xb5\xe9\x50\xe4\xc2\x1b\xe9\x8e\xe5\x15\x2e\xac\x1f\x91\x62\x15\x52\x1f\x50\x89\x16\x35\xdb\x44\x27\xf0\x0b\x09\x8c\x8b\xb5\x3c\xab\xb5\xbd\xe1\x26\x4c\x20\xa9\x2c\x8a\x4a\x70\xb3\x3f\xb1\xaa\xe4\xab\xca\x48\xa5\x4f\x32\xdc\x61\x7e\xa2\xf9\xe6\x98\xa9\x74\xcb\x0d\xa6\xa6\x52\x78\xc2\x4a\x7e\x6c\x19\x17\xd6\x02\x93\x22\xfb\xaa\xb6\xf5\xa7\x2d\x4e\x9d\x3e\xb4\x51\x5c\x6c\xea\xaf\x6d\xf4\x1f\x94\x3b\xc5\x7e\x72\x4c\xe6\x5f\x73\xfc\x37\xe2\x75\x3e\x84\xf0\xee\x6a\x79\xd3\xf8\x11\xa9\xa0\x2b\x73\x2b\xed\xe6\x35\xdd\x08\x9e\x04\xc5\xc5\x1a\x95\x53\xdc\x5a\xc9\xc2\x52\x44\x91\x95\x92\x0b\x63\xff\x48\x73\x8e\xa2\x2b\x74\x5d\xad\x0a\x6e\x48\xd3\xbf\x55\xa8\x0d\xe9\x27\x81\x0b\x26\x84\x34\xe4\x51\x15\x79\x38\x19\xed\x2b\x01\x17\xac\xc0\xfc\x82\x69\xfc\xe2\x62\x27\x09\xeb\x63\x12\xe9\xb4\xe0\xdb\xb3\x7f\xb7\x61\xc7\x63\xdc\x74\x35\xa8\x21\x7a\x48\x0a\xb2\xe1\xb0\xc4\x94\xaf\x79\x6a\x6d\xde\xb9\x02\x39\xa5\xe6\x0a\x33\x58\xe1\x96\xed\xb8\x54\xe1\xfb\x5e\xdc\x4e\xa6\xf8\x88\x7b\xaf\xe3\xc8\x06\x8f\x0b\x7a\x66\xfb\xc7\xee\xf3\xc3\x59\xae\xdf\xde\xd9\x98\xc2\x35\x2a\x14\x64\x41\x92\x4c\x0e\x53\x85\xc6\xc6\x4f\xc6\x45\x5b\x76\x35\x9f\xdb\x3a\x72\x41\xda\xa2\x66\x61\x44\x06\xab\xbd\x6d\xd1\x0f\xc4\x89\x9b\xbe\xec\xbc\xa0\x7b\x54\x33\x29\x9e\x1a\x2f\x4d\x4b\x81\x2b\x90\x77\xa2\xdd\xc3\x22\x32\x66\x1a\x83\x0b\x94\xef\x45\x8f\xe6\x8d\x9d\xae\xec\x78\x8a\x4a\xd7\x83\xb2\xfc\xad\x25\xcd\x75\xe4\x4a\xb7\xb8\xd7\x36\x7c\x58\xc3\xa0\x98\x0d\x60\x72\x9d\xa4\xca\x1c\x4a\x14\x3a\x03\x5e\xf3\xdc\x4d\xf3\xe4\x5c\xfe\xa5\x5b\xdc\x9f\x11\xc5\x83\x87\xef\x05\xbc\x5a\x43\x25\x34\x9a\x45\x8f\x26\x83\x3b\x9e\x67\x29\x53\x59\x87\x3c\x69\xa7\x32\xb2\x60\x86\xa7\x2c\xcf\xf7\xb0\x41\x41\xb8\x12\x33\xcb\xad\x1b\xb5\x45\x1a\xcd\x4b\x3d\xda\x5c\x3b\x4c\x54\x4f\x31\x91\x09\x32\x93\x05\x49\xe5\x19\x51\xd5\xd5\xca\xfd\xa9\x9f\xdb\x5e\xda\xf0\x26\x7c\x1a\x3e\x5a\x3d\x3f\xd5\x70\x71\x4e\x03\xc9\x29\x12\x74\x19\xa7\x58\xbd\x71\x6f\xdc\x71\xb3\x8d\x12\xf5\xd8\xe9\xa9\x06\xa3\x48\x57\xda\x48\x85\x76\x62\xbe\xb1\x5c\x1f\x57\xba\x33\x52\x78\x76\xb7\x45\xb3\x45\xd5\xb0\xd3\xa3\x29\x15\x49\x49\x1d\x7b\x1f\xc5\xec\xf9\x4c\x06\x6b\x90\xf6\xb4\x6f\xa8\xab\x8a\xe7\xe6\x98\x0b\x78\x73\x5e\x99\xad\xb3\x7a\x55\x4f\xbf\xb5\x93\xc4\x9d\x19\x46\x1c\x9a\x3e\x76\xdd\xd1\xfb\xf6\x70\x82\xb8\x66\x05\x86\x90\xe2\xdd\xd7\x44\xc3\xec\x18\x96\x91\x3b\x02\x33\x78\x77\xe2\x81\xcc\x31\x8d\xfc\xd8\x71\xac\x4f\xec\x52\xe5\xe4\x2b\xfb\xbf\x08\x3f\x00\x37\x6f\x2e\xdf\x9c\xc1\x79\x96\x81\xb4\x5a\xa8\x34\xae\xab\xdc\xa1\x13\x9d\xb4\xf0\xc5\xc2\xce\x76\x0b\xa8\x78\xf6\xff\x9f\x46\x48\x45\xe3\xb4\x1d\xb3\xb5\xc3\x89\xa0\xe6\x4c\xd7\x06\xb2\xcb\xeb\xa5\x95\x5f\x40\xa8\x23\xa1\xa8\xef\x82\x6e\xc6\x25\x9f\xa2\x30\x98\x4a\xb1\xe6\x9b\x4a\x21\x14\x55\x6e\x78\x99\x23\xac\x91\xd1\x04\xa4\x6d\x80\xf8\x03\xfc\xe8\xdd\xe9\xb5\x64\xd9\x0f\x2c\x67\x22\x45\xb5\x74\xfd\xf6\x88\xd7\xb3\xaa\xc5\xb1\x7a\x4b\x41\x47\x1b\x32\xb7\xcd\x7e\x01\xcd\x10\x20\xd2\x3f\x0d\x8a\x90\x8c\xca\x74\xd2\x23\x6c\xb1\xa1\x27\xfe\xb6\xa6\xbd\xf4\xa4\x13\xc7\xa9\x0d\xba\x15\x2d\x08\x81\xb5\x5c\xd7\x87\xd2\xb1\x00\xb7\x70\x30\xa0\xe5\x73\xc1\x7b\x5c\x48\x71\xe0\xdc\xf3\x6f\x25\x68\x74\x2b\x80\xc4\xf9\xed\x87\x70\xcf\x27\xb9\xb9\x03\x3a\x5c\x07\x49\x39\x69\x70\x91\xf1\x1d\xcf\x2a\x96\xf7\x28\xba\x45\x86\x5b\x02\xa2\x06\x2d\xed\xaa\x84\x84\x42\xf1\x42\x91\x4c\x69\x59\x0b\x77\x5b\x54\x76\x82\x33\x4c\x6d\xd0\x34\x4b\x9c\xcb\xeb\x65\x8f\x68\x90\x37\xf1\xe5\x47\x67\xa7\x0f\x42\x38\x82\xff\x56\x21\xb0\x42\x92\x38\xf3\xbc\x3f\xa3\x6b\x0b\x45\xfb\x62\xed\x83\x24\x37\x27\x60\x51\x9a\xfd\xa2\x59\x0a\xd8\xf1\x5a\x9a\x89\xb3\x82\x4e\x12\xe1\xc4\x87\xc9\x1e\x7d\xb7\x98\x76\xdc\x0e\x04\xa3\x88\x8b\x0d\x1b\xcf\xb8\xdb\x0d\xbf\xd7\xf6\x22\xaf\xc4\xb6\x0f\xf6\xe5\xd2\x4c\x43\x81\xa8\x95\x81\x0b\x2a\x7e\x99\xa5\x17\x80\x82\x16\xfe\x90\x4b\x96\xc1\xca\xfb\x5b\x1d\xb6\x09\x09\xf6\xa7\x55\x34\x69\xd2\x99\x78\x3b\xc8\x85\x6b\x58\x31\x62\x54\x0a\x0a\x9a\x8a\x69\xa3\x2a\x8b\x31\xef\x29\x77\x97\x9b\x08\x2b\x37\x8f\x1f\xce\xff\xba\x3c\x73\x0d\x22\x01\x02\x9e\xd9\x49\xe6\xca\xdb\x60\x8f\xa6\x4d\xcf\x3c\x27\x2a\xbf\x57\x0a\xcf\xe6\x51\x69\xde\xfa\xe9\xe2\x6d\x7f\x0a\x79\x3f\x93\x99\x86\xcc\x6b\xbe\xda\x71\x65\xce\x00\x7e\x96\xda\x5c\x3b\x4d\xf4\xe9\x0a\x38\x17\x7b\xaf\xae\x7a\xf9\x6a\x21\x39\x3c\xe3\x22\xcd\xab\x8c\x22\xcf\xb5\x14\xf8\xbc\x96\xbd\x91\x6d\x9a\xfd\x38\xf1\x5e\x8c\x58\x66\xc4\x95\xee\x31\xf9\xd2\xca\x85\xa0\xf9\xa1\x84\x8e\xed\x4b\xf7\x98\xa9\xb7\xcd\x00\x26\x27\xec\x56\x5b\xd8\xca\x3c\xd3\x50\x32\xc5\x0a\x34\x14\xa1\x02\x30\x6b\x49\xa4\x1e\x7d\x74\xe6\x8d\xcc\x22\x09\xbc\x75\x6b\x3c\x90\x82\xe0\xcc\xda\x8e\x86\x6c\x7c\x54\xce\xa3\x92\x02\xeb\x6c\xc1\x5a\x26\xc7\xd8\x6e\x3c\x3c\xc8\x8e\xff\xc6\x18\x82\xc1\x91\x44\x6c\xf7\xde\x23\x1a\xd6\x3f\x58\x1b\xb0\xc6\x1f\x79\x32\x66\x08\x10\x3c\x36\xfe\xe8\x70\xe9\x48\x2d\xed\x8c\x46\x53\x9f\x5f\x42\xda\xef\x98\x81\xbb\x2d\xf7\x49\xb6\x8e\x9c\x06\xe8\x5a\x70\xef\xf2\x6e\x59\x02\x6f\x7d\x7a\xc9\x27\x3b\x6c\x06\xe9\x28\x78\xf5\x91\x9d\x9e\x8f\x5e\xf9\x9c\xc9\x51\x5c\xf2\x23\x13\x85\x13\x02\xdf\x45\x56\x99\xbd\x21\xfa\x76\xc3\x46\xf0\xd6\x37\x88\xe0\xa2\xb8\x74\x27\xad\xdc\x53\xbc\xb7\x3d\xd8\x87\x53\xe3\x39\x0a\xbd\xd8\x0c\x5d\xdf\xf9\x28\x9c\x55\x1a\x13\xf8\xd5\xa2\x22\x27\xff\xe8\x40\x18\x45\x73\x0b\x76\x62\x81\xf8\xbd\x00\x1f\xed\xbc\x5d\xcc\xc0\xad\x60\x41\xa3\xc3\x76\xad\x2c\x72\x9b\x3c\x04\x67\xb1\x73\xa1\x70\x19\x9f\x00\x30\xed\xdc\xd9\x9f\x3a\xc1\x2f\xf3\x63\x8b\xc5\x26\x77\x6c\x21\x97\x5f\x53\x37\x93\x35\x17\x9b\x04\xce\xa3\x24\x63\x6c\x1d\x64\xa0\xdb\x98\xa1\xe9\x2a\xba\xba\x07\x87\x28\xe7\xad\x76\x62\x99\x5b\xff\xdd\xc9\x57\xe4\x6d\xa3\xce\xe6\x50\x44\x83\xd4\x2d\x9a\x68\x2d\xdb\x1b\x94\x5e\x43\xe4\xb0\x6d\x60\x64\x3c\x88\x5b\xc3\x67\xa6\xb7\x88\x08\x72\x79\xaa\x1b\x90\x4a\xab\x9a\xa4\xbd\x14\x18\xb2\xae\xba\x57\xe7\x20\xc2\xbe\xf3\xbb\x14\xa8\x7d\x06\xd7\xae\x89\x32\x71\x3f\x6c\x09\x35\xbe\x74\x89\xf8\xbf\x4b\xe1\xf6\x2d\xfc\x97\xce\xf9\xe8\x5b\xb7\x49\xd1\x96\x8a\x63\xa8\x38\x4c\x24\x86\x0f\x29\xbf\x52\xb4\x7e\xcd\xf7\xa0\xab\xb2\x94\xca\x04\xf6\xa5\x4b\xd4\x9c\xff\x75\xb9\x70\x48\xc8\x25\x79\x7f\xba\x78\x5b\x03\x8d\xc8\x1a\xc3\xab\xeb\x0f\x9d\xf9\x74\x86\x6b\x51\x77\x42\x66\x08\xc4\x42\x5c\xc0\x7e\x11\x11\x7f\x9d\x6b\x6f\xaf\x01\xda\x7f\x76\x4f\x23\x14\xd1\x72\xb2\x05\xac\x64\x15\x59\x69\x58\x8a\xb2\x35\x16\xf8\xfe\x6b\x2b\xb8\x6f\xbe\x79\xe9\xf2\x45\xb4\x32\x02\xb7\x05\x53\x4a\xbf\x15\x41\xb1\x39\xb0\x3a\x14\x87\x99\x68\x4c\xb2\x0b\xc4\xe3\x60\xbf\x3d\x98\x1d\x67\x83\x63\x6f\x58\xf5\x4b\xc1\x30\x41\xbc\x17\x70\x29\x51\x03\xc1\xbd\x71\xfa\x83\x76\x10\x57\xc3\x4c\x91\x47\x89\xc6\x02\xde\x22\x24\x10\x88\x53\xfc\x58\xe6\x3c\xe5\x64\xd1\xf5\x32\xb6\x11\x7c\x94\xa6\x5d\x5e\x16\x4c\x54\x36\x1b\x35\x31\xd4\x43\xb4\x0b\x63\x13\xb7\x4d\xe0\x94\x2c\xc5\xb0\x49\x3b\xbe\xb0\xeb\x35\x6f\xaf\xe7\xd6\x3c\x37\xa8\xfc\x26\xa0\x01\xb9\x6e\xa8\xf7\x45\x35\x9d\x84\x21\x99\x70\xed\x3b\xb0\xb9\x23\xea\xae\x28\x73\x1b\x2e\x62\x46\xa8\xb7\x2c\xac\xcb\x07\x17\x75\x22\xf0\x49\xf3\xd0\x67\xca\xca\x15\xcc\xa4\xdb\xab\x8f\x25\x0d\x80\xd6\x9a\x93\x90\xe1\xf0\x05\x97\xa0\xca\xb9\xb6\x52\xb3\x9b\xe6\x10\xf6\xc7\x03\x24\x2d\xec\x16\x4d\x3c\xd7\x66\xf3\x7c\x4d\x2b\x1b\xea\xcf\xaf\x2f\x31\x1b\x46\x3c\x4c\x29\xb6\x8f\x3c\xe5\x06\x8b\x01\x14\xdb\x19\xc2\xf9\x08\x9b\x7e\x73\x2a\x3c\xb1\x29\x17\xef\x16\x71\x9f\x01\x8f\x8a\x68\xd2\xbc\xc5\xbd\x73\x17\x26\xea\x83\x12\x8e\x84\xc2\xbc\xc6\xc4\xb7\xb8\xb7\x8d\xfc\xd6\x5d\x3c\x76\x8c\x43\xfd\x71\xb0\x4f\x70\xff\x16\x63\x12\xa2\x27\x81\xb1\xf8\xdc\x3d\xb1\x1a\x00\x22\x3c\xf4\xe8\x40\xcc\x34\x4e\x0f\x2d\x9d\xbc\xe9\x0b\x2b\x0d\xe7\x66\x5e\xc4\xac\x2c\x73\x3e\x10\x90\xdc\xc7\xc8\x21\x50\x3f\x01\xeb\xdd\x27\x0c\x78\x26\xdb\xb5\xe2\x9a\xdd\x45\xa7\xda\xa7\xda\xa9\x91\xac\x7e\xcb\x4b\xbb\xa7\x34\xc2\xb5\x8f\x23\x61\x83\xd6\x21\xe8\x40\xdc\xd9\xf9\x2b\xb1\x80\x6b\x69\xe8\x7f\x57\x1f\xb9\x36\x3a\x9a\x5f\x6b\x3e\x34\x63\x5c\x4b\x63\xdb\x7e\x92\x48\x1c\x53\x33\x05\xe2\x57\x5d\xe4\x18\xc2\xf9\x1e\x8d\xab\xbd\x7f\xab\x13\x0a\x5a\xa4\xd5\x51\xe3\x72\x1f\xae\x69\xe6\x92\x2a\x8c\xdc\x6c\x5b\x0b\x3b\x22\x1e\x12\x92\x42\x8a\x63\x9b\x42\x0c\xd4\x47\x88\xd6\x4a\xe3\x3a\x88\x52\xaa\x8e\xbc\x06\x3a\x1a\xa1\xb9\x42\xf0\xdd\xdb\x60\xee\xde\x71\x67\x01\x72\x46\xe1\x3f\xb3\x78\xc2\xed\x65\xd3\x72\x89\xa7\x50\xa0\xda\x8c\xf1\x59\x52\xf4\x9c\x52\xdd\x50\x7c\xf3\xf2\x1b\x8e\x72\x6d\x22\x03\xfa\xb7\xe1\xfb\x35\xb9\xe3\xcc\x50\xef\xda\xba\xb0\x58\xb0\x92\x54\xff\x4f\x8a\x73\x56\x92\xff\x82\x92\x71\xa5\x13\x38\xb7\xc7\xb2\xf2\xf8\xd0\xdb\xed\xfd\x16\x65\x9b\x34\x51\xa5\xe5\xfe\x6f\x15\xdf\xb1\x9c\x62\x30\x79\x96\x00\xcc\x87\xc1\xb5\x5c\xf7\x26\xa2\x05\xdc\x6d\xa5\x46\xbf\x43\x89\xb9\x05\x2d\x47\xb7\xb8\x3f\x5a\x74\x4c\x13\x78\x3c\xd6\x1c\xbd\x12\x47\x8b\xb0\x31\xd8\x35\x94\x30\x01\x38\xf0\x7e\x64\x9f\x1d\x25\xbd\xb9\x6b\x70\xe9\x32\x31\x9f\x0d\x86\x79\x96\x65\xf6\x64\x1f\xcb\xdf\x4e\xc4\xe5\x61\x90\x24\x33\x7c\x4b\xe6\x4a\x1c\x4e\x00\xa4\x76\x53\x9f\x95\xd6\x35\xe4\x0b\xe8\x06\xe4\x2e\x00\xa5\x74\x8b\x59\x95\xc7\xac\xcc\x6f\xe0\xc5\x80\x51\x07\xe0\xd4\x5b\x03\xdd\x43\x41\xd7\x6d\x4e\x7a\xc4\x07\xcf\x07\xcd\x90\xea\xe8\x06\xa5\xcc\x06\xa1\x64\x5c\x5a\x6d\x24\x59\xa3\xfd\x83\x89\x2d\x6b\x6d\x7b\x0c\x82\xee\x1e\x46\x1f\x47\x82\x3e\x13\xbf\x42\xc3\x92\x6e\x66\x40\x0e\xd8\x47\xce\x45\xf5\xd1\x8f\xf1\x58\xc9\x1c\x0f\xde\x23\xb0\x8f\xea\x0c\x9e\x3e\xf5\xfd\xd6\xbd\xd6\x1b\xcc\xf1\xfc\xd5\x21\x96\x26\xff\xf1\x01\x52\xb7\xb9\x1e\x81\xf6\x83\xe6\x3f\x05\x46\xe6\x60\xd7\x9e\xe2\x3e\x33\x7e\x85\x7b\x63\x58\x98\x15\xe7\x27\xa2\xfc\xa7\xe0\xd9\x91\xa9\xa3\x0e\x74\xf7\xc4\xb4\x23\x24\xe7\xa0\x5d\x98\x83\x78\x61\x12\xf5\xc2\x28\xf2\x85\x69\xf4\x0b\xb3\x10\x30\x4c\xa1\x60\xf8\x62\x48\x18\x26\xd0\x30\xcc\x83\x7f\x30\x0b\x15\xf7\x86\x31\x17\x19\x4f\x0e\xc0\x5a\xe4\xfd\xd1\xf1\x04\x5d\xb2\xb2\x79\x08\xf9\x1e\x62\x9a\x42\xca\x3d\x21\xdd\x03\x2d\x4f\x8c\xa7\x8d\x69\xef\x8b\x98\x27\x48\x1f\xa0\xf5\x79\xa8\x79\x4a\xfc\x1d\x56\xe6\x21\xe7\x09\x92\x07\xb8\x7a\x0a\x3d\xc3\x4c\x04\x0d\x73\x50\x34\xcc\xb1\x91\x09\x34\x0d\x5f\x0a\x51\xc3\x97\x41\xd5\xf0\x69\xc8\x7a\x6c\x33\xef\x0b\xa1\x6b\x98\x42\xd8\x30\x6f\x6a\x99\x8f\xb4\x61\xca\x2e\x8c\xcc\xd1\x1f\xdc\x98\xb1\xff\xd6\x34\xee\x02\x91\xf6\x83\x4f\x07\x92\x37\xdd\x44\x22\x99\x01\xf9\xa7\xed\xcd\x36\x58\x62\xdc\xd0\xe6\xec\x3f\x75\xf2\xcf\x27\xa4\x4a\x73\xcc\x44\x76\xdc\x0c\xe1\x64\x18\xfc\x7d\x6a\x2e\x8f\x46\x56\xca\xcc\x65\xc2\x6f\xea\x1e\xed\x28\x8d\x61\xa9\x3f\x67\xe5\x79\x19\x0c\x62\x4c\xec\xc1\x72\xee\xa6\x65\xeb\x01\x1e\xc0\x1a\x65\x0f\xc9\xfd\xb1\x76\xb7\x05\xae\xd7\x98\x9a\x3f\xf9\xdd\xc9\xe1\x40\x6e\xa9\x50\x93\x3a\xce\xfe\x31\xfc\xeb\x4f\x0f\x4c\xfb\x4d\xa3\x13\xc7\xdc\x4c\xe4\x78\x65\x1b\x1f\xec\xd9\x3b\x39\x38\x3a\x24\x3b\x3b\x8c\x04\xae\xc8\x62\x46\x02\x66\x81\x4c\x68\xd7\xd8\x1e\x1f\x6b\x93\xd1\xfe\x80\x74\xbd\x98\x58\xb8\xfb\x38\x38\xba\xa7\xec\x3e\xe4\xde\xd7\x72\xe9\x16\x9b\xb8\x80\xb7\xf6\x58\x68\xf3\x8d\x0d\x2a\xd7\xf2\xea\x23\xa6\x55\x7c\x9f\xbc\x2d\xdb\xd1\x09\x7f\x7e\x6e\xf3\xcf\x0d\xa2\x73\xe3\xec\x20\xba\xc6\xf2\xe7\x65\x37\x9d\x6c\x07\x24\x78\x8b\xfb\x26\xbf\xe6\x91\xa4\x3b\x59\x37\x27\x1f\x16\xe6\x63\x37\xbd\xff\xbf\xb0\x63\x54\xac\xb8\x70\x0c\xba\x4e\x83\x9a\xc7\xf4\x90\xe7\x75\xdc\xa6\xe5\x40\x9e\x3b\xd6\xfe\x07\x53\xb3\x6f\xee\x91\x9a\x1d\xc7\x57\x76\x20\x71\xd8\xd9\x64\x62\xe1\xea\xb7\x8a\xe5\x09\x5c\x36\x07\x18\x47\x48\xfa\xc6\xfe\xf5\xde\xd4\x5b\x6f\xa8\xaf\xa5\x0a\x17\x7b\xfc\x99\xce\x31\xa1\xdb\xe0\x96\x32\x51\x47\xb0\xc6\x32\xb4\xbd\x7a\x04\x25\x53\x86\xa7\x55\xce\x14\x90\x0f\x6f\xa4\x1a\x81\x7f\x33\x74\xd2\x18\xef\x12\x53\x29\xb2\xb9\xab\xd0\x9b\xc3\xf7\xda\x5a\xb2\xe7\x4b\x50\x71\x99\xd9\xc9\x8d\x17\x63\xca\x39\x70\xa1\x67\xee\xec\x50\xb0\x64\xb9\x0e\xb1\xa9\x76\xfa\x85\x3b\xa4\x77\xc7\xf5\x38\x59\xae\x1b\xfc\xc2\x37\x42\x2a\xcc\x9e\x37\x53\x43\xe3\xcd\x09\xfc\xb0\x0f\xf3\xe5\x98\x97\x71\x13\x36\x46\x6d\xba\xc4\xf3\xe9\x1d\xca\xab\xab\x09\x11\x6b\xa9\xec\x6d\xb9\x67\xd9\x98\x19\xd9\x6d\xd6\x1d\x4f\xcd\xf3\x04\xfe\x8e\x4a\x5a\x43\x14\xb8\x61\x86\xef\x6a\xe0\x14\x4e\x62\x18\x7f\xba\x84\x8d\x05\x98\xaf\xe1\x99\x25\x08\xbc\x28\x30\xe3\xcc\x60\xbe\x7f\x1e\xf6\x2e\xf5\x5e\x1b\x2c\xa6\x0c\xc6\x9e\x46\x1d\x39\xad\xb5\x96\xaa\x60\xc6\xb6\xfb\xee\x9b\xb1\x3d\x87\x99\xb6\xf4\x6b\x38\x2c\xdd\x48\xcf\x9d\x9f\x3e\x30\x0d\x3f\x4f\x4f\x44\xd7\xc1\xd5\x4e\x6b\x75\x13\x2e\xec\x85\xa5\xcb\x68\x70\x0d\xc6\x06\xff\x20\x9b\x64\xa0\xd0\xde\x48\xf6\x7e\xf5\x00\xef\x0b\x37\x85\x47\x13\xb4\xa1\x51\x90\x4b\xb8\x89\x25\xaa\x62\x85\xf6\x1e\x56\xf4\x86\xa8\x7b\xa9\xcf\x54\x24\x0b\x6b\x24\xbc\x38\x6c\x38\x66\x00\x2d\xb5\xbf\x7c\xd1\x1d\x90\xac\xcc\xcc\x7d\xf9\x4e\xd3\xf1\x3d\x79\x77\xbf\xaa\xde\x7f\xef\x0d\xe9\xe1\xfb\xf1\x61\xff\xbd\x47\xf2\x71\x3f\xfe\x71\x3f\xfe\x71\x3f\xbe\xfb\x79\xdc\x8f\xf7\x9f\xc7\xfd\xf8\xa1\xcf\xe3\x7e\xfc\x21\x91\xc7\xfd\xf8\xc7\xfd\x78\x77\x91\x7a\x89\x69\xa5\xb8\xd9\xbf\x55\x72\xcd\xf3\x89\xab\xed\xfd\xf6\x75\x12\xc5\x9e\xd5\x26\xf0\xe2\xae\x1f\xdc\xbc\x5e\xb6\xeb\x86\xf4\xd8\xb2\x90\xa7\x5f\xf5\x67\xde\x35\x32\xfa\x9e\x95\xdc\xdd\x08\xbe\xdf\x11\xeb\x50\xc5\xc1\xf6\x74\x2d\xed\x92\xc8\x5e\x08\xa9\xef\x6e\x12\xf1\x37\x79\xb6\x00\x7b\x89\xc3\xaf\x51\x9c\xea\x7f\x91\x19\xaa\xfe\xf9\xf8\xd2\x8b\xc2\x5e\xc6\x72\x5c\xbb\x35\x21\xad\x91\xc2\xc3\x4e\x5e\xd2\x1e\x6d\xaf\x5c\xd9\x08\x23\x21\xdd\x32\x11\x09\x0c\x2b\x34\x77\x88\x82\xe6\x15\x64\x9a\xe2\xe8\x8f\x52\x01\x7e\x64\x04\x15\x17\xb0\xe1\x3b\x14\x14\x5f\x3a\x85\x11\xdc\x1d\x09\x5f\x04\xa1\x19\xc0\x20\xd3\xe1\x2c\x35\xc9\xd5\x77\x04\xff\x91\xfc\x2d\xf9\x3b\x0d\x19\xaa\x72\xa3\x58\x86\xae\x30\x4d\xeb\xe1\xff\x39\x85\x22\x12\x85\x52\x46\x7d\xbb\x02\x31\xf1\x81\x1b\x69\x2f\x85\x37\x39\xe4\x38\x44\xee\x2f\x78\x14\xea\x2a\xb7\xe0\x98\xd3\xa0\xa9\x59\x28\x28\xd3\xa8\xd1\x06\x0f\x2e\x78\x51\x15\xd6\x02\x7d\x05\x95\xb6\xb5\xf5\x79\x6e\xcc\x8f\xd4\x72\x9a\x9c\x36\x7e\x5e\xb0\x8f\x3d\x5a\xb6\xcd\x8b\x04\xe0\x5c\x58\xd0\xee\x05\xdf\xa3\xdb\x14\x6b\x21\xc7\x4b\x83\xda\x6b\x3e\x9d\x31\x59\xd2\x6d\x03\x6a\x6e\xdd\xf5\x28\xda\xa5\xc8\x0a\x9d\x90\xb9\x09\xd1\x45\x5b\x1a\xa7\xc9\xcb\xcf\x85\xfa\x53\x5b\xd2\x6b\x7a\xbb\xc0\xb5\x73\xc1\xdf\x5e\xff\x0f\x57\x1f\x88\x1f\xed\xe3\x44\x18\x5c\x02\x3f\xc4\xe3\x3f\x7e\x34\x14\x21\xf3\x3d\xa4\x4c\xd9\xe5\x50\xb8\x67\xe3\xe9\x07\xe9\xd0\x5a\x53\xb8\x0b\xd1\x1d\x9b\x1a\xd8\x7f\x60\x82\x2c\x2d\x65\x86\x69\xa3\x64\xb9\xe5\x69\x42\x2a\xf3\xee\x73\x48\x3c\x97\xf2\x56\x43\xce\x6f\x5d\x7d\x97\x78\x1c\xb5\xe7\x5c\x52\x5e\x6e\x51\x69\x77\xeb\xf4\x18\xae\x2e\x2e\x7f\xbe\x3a\xbe\xba\xb8\x5c\x9e\x1f\x5f\xfc\x7c\x7e\xf1\xf3\xf9\x8b\xaf\x8f\xdf\xbe\x79\xfd\xb7\xd3\x97\x5f\x7f\xdb\x69\xf3\x2e\xd6\x22\xde\xcf\xe1\x6b\xe7\x57\xcb\xd3\x17\xdf\x1f\xff\x74\xf1\xcb\xf1\xf2\xe7\xf3\x17\xdf\x7e\x17\xe9\xbc\xd7\x66\x88\x74\xc1\xc5\xcd\xeb\x65\x5d\xe3\xed\xe6\xf5\x72\x77\x9a\x9c\x7e\x81\x13\x31\x41\x52\x73\xf6\x22\x8f\x7c\xe3\xf6\x92\xbb\x55\xa3\xc4\xd3\x02\x96\x6f\xa4\xe2\x66\x5b\x0c\xaf\x08\xac\x83\xd1\xbc\x2a\x70\x23\x0d\x77\x77\xf0\x1d\x16\x23\x42\x64\x9b\x5b\x26\x32\xbd\x65\xb7\x98\x40\x9d\xc5\xd5\xd1\x80\x16\x3e\x0a\x0b\xb9\x43\x40\x61\x14\x77\x0b\x35\xae\x1c\x66\x10\x99\x86\x4c\xba\xb4\x9b\xbb\x56\x93\x40\x27\x4e\x0f\x33\xea\x22\xf5\xe5\xd5\xf2\xf8\xe2\x87\x8b\x97\xa4\x35\x80\x67\x7b\x56\xe4\xcf\xcf\xa2\xa6\xd6\x6e\x19\x53\x17\x7c\x8e\xb3\x3c\xd3\xbb\xcc\x1d\xf3\x99\xa5\xdb\xce\x2b\x43\x1a\xb6\x71\x9b\xe5\x21\xce\x0e\x32\xe8\x4f\xf3\xf9\xb8\x69\x64\x2a\x73\xa7\x73\xae\x67\xa9\x7c\x90\x70\x67\x72\xf5\xca\x69\x05\x7e\x3f\x35\x9c\x26\x2f\xec\xf4\x70\x9a\xbc\x0c\xca\x1a\xa4\x68\x95\x38\xdf\xdd\x66\x88\x5f\x54\xb9\x2d\xcc\x77\x06\x46\x55\x91\x22\x34\xad\x19\x7f\x3a\x7e\xb7\x5b\xbb\x28\x1e\x0b\xdc\x35\xec\x3a\x1b\xba\x1b\x18\xb6\x65\xef\xf8\x2d\x4f\x0a\xf9\x3b\xcf\x73\x96\x48\xb5\x39\x09\x58\xf1\xc4\x95\xc3\xfa\xb0\xe4\x19\x7e\xb8\x79\xbd\xfc\xaa\x8d\x4c\x3e\xa4\xb2\x28\x99\xe1\x2b\x9e\x73\xb3\xff\x90\xbc\xf8\x5e\x61\x2a\x8b\x02\x45\x86\x59\xf2\xe2\xff\x0e\x45\x62\x52\xc2\x41\xd4\x1e\xf5\x9e\x9b\xd7\xcb\x0f\xe7\x57\xcb\x0f\xa7\x2f\xbe\xff\xf0\xd3\xc5\x2f\x1f\xc6\x83\x64\xfb\x8d\x17\xdf\x7e\x17\xde\x78\xf9\xfd\x37\x2d\x72\x21\x9a\x7f\x08\xd1\x7c\x06\xd1\xd1\x90\x0d\x30\x15\xf8\xef\x41\xfa\xc5\xb7\xdf\x85\x17\x1b\xb6\x3b\xa4\xbb\x2d\xe6\x92\xfe\xcc\xb3\xdc\xd4\x1c\x77\x6f\x7e\xa3\x0e\xf7\xe2\x01\xf3\xdb\x84\xb3\x15\x16\xc0\x4d\xbb\x99\x6b\x37\xd3\xc1\x1e\xe0\x4c\x0e\x48\x76\xdd\xe8\xdf\xc8\x69\xa2\xea\x7c\xf9\xf9\xd5\x29\xf3\x68\xba\xb4\xab\x4b\x99\x67\x5f\x4e\x91\x6f\xf2\xec\xc3\x8a\xa5\xb7\x77\x4c\x65\xff\xb6\xea\x7c\x8c\x81\x11\xd2\x9f\x3d\x06\xb6\x5f\x1a\xe7\xb5\xa3\x85\xb9\xf2\x7d\x77\xf8\xca\x28\x49\xf7\x30\x4a\x35\x46\x2e\x4e\x8b\xc6\x3d\xae\xc5\xfb\x69\xb0\x79\x69\x84\xde\x08\xe7\x63\x62\xe8\x13\x6a\x9e\xdd\xcb\x9a\x87\x2c\x38\xd6\x69\xa7\xb3\x09\xa2\x5d\x49\xf7\x44\xd1\x5d\x92\xcc\x41\xfc\x2e\x2a\x7f\xfd\xf9\xa3\xf2\xfd\x0a\x87\x48\x61\x4f\x64\x44\xd2\x77\x3e\xdb\x22\x95\x2f\x58\x1e\x5f\x06\x5c\xd4\x49\x81\x1d\xcf\xfc\x86\x1c\x73\x21\xb8\xbd\x5c\x69\xea\xa4\x75\xe6\x81\xa1\x3d\x33\x3b\x37\x34\xe5\x59\x92\x3e\x7f\xad\xec\xa2\x5d\xba\xce\xa5\xaa\x3f\x75\xca\x79\xd7\x40\xed\x0f\x33\x92\x2a\xfe\xf0\x66\xdd\x3b\xb3\x85\x10\x0d\x0a\xe3\x18\xf1\x87\x88\x70\x6f\x0b\xdf\xba\xb4\xa6\xbf\xa2\x35\x74\xc8\x86\x69\x9b\x2d\x0c\xcb\x7f\x66\x6f\x52\xed\x30\x97\xa5\xbf\xbf\x83\x1f\xb9\xb6\x79\xbf\x76\x93\xb5\xac\xc4\x60\xc9\x8f\x15\x31\x65\xc5\x47\x0b\xfc\x4b\x2c\x51\xd8\xda\x58\x52\x40\xa9\x30\xe5\x1a\xf3\xbd\x3f\x1e\xd3\xa6\x59\x57\x3d\x8f\xe7\xd0\x25\x30\x1a\x78\x8a\xda\xe7\x78\xed\xae\x76\x28\x71\x8d\x59\x95\x46\x0a\x64\xc1\xd0\x92\xce\x17\x53\x6f\x35\xef\x56\x2f\xb2\x8f\xc3\x06\x69\x21\xb5\x2d\xda\xec\xaa\x77\xc8\x95\x2f\x00\xeb\x1b\x7d\x81\x92\xb7\xbd\x02\xf0\xa3\xdb\x02\xbd\xd6\x76\x29\x5e\x9f\x03\xa9\xf9\xad\xdb\xc1\x41\x2d\xfa\x56\xc7\x69\x2a\x95\x55\xd6\x60\x6a\xb8\x5d\xad\x26\x9a\xef\xbc\xef\xe9\x90\x54\x0a\xb7\x91\x32\x3e\xca\xa3\xa6\x5d\xf7\x54\x43\xeb\x7b\x9f\x37\xe6\xca\xeb\x26\x5a\x4e\xe7\xbc\x16\x83\x3f\x9c\x35\x59\x22\x83\xba\xab\x5f\x8a\x6d\x02\xbb\x33\x28\x24\x36\x55\xd7\xba\x0f\x24\xeb\x62\xd9\xf0\x8c\x27\xb8\x98\x28\xf2\xdf\xfe\xe0\x6f\x15\xcb\xf5\xc1\xcf\x07\x3c\xf7\x41\x80\x1c\x86\xfe\xab\x37\xa1\xda\x72\x70\xce\x15\x0e\xf2\xf6\x83\xfa\x16\x5b\xc6\xeb\x4a\xda\xc5\xaa\xfe\xfb\x4a\xa0\x76\x38\x29\x2b\x5d\x24\xe6\xb1\x53\x11\x16\xec\x76\xab\x3d\xfd\xe2\x2b\xf4\x58\xa0\xaa\x2a\xb4\x65\xac\x3a\xf5\x88\xdb\x8a\x53\x91\xf5\x1d\x1a\x87\x9b\x5d\xc9\xcc\xb1\xe2\xa2\x4d\x2a\x9e\xd5\xbf\x3f\x90\x4b\x16\x39\x13\x14\x2a\xb2\x59\xb6\x7e\x64\xb9\xb6\x7c\x31\xb1\x77\x6e\x2c\x35\x1e\xb0\x05\x95\xd0\xcc\x70\xbd\xe6\x03\xb5\x97\xdf\x1f\x0e\xfc\x1d\xb2\x6c\x3f\x7b\xd8\x76\x98\x31\xa2\x44\xf6\xfc\xb0\x0e\xa4\x0e\x85\x8f\x92\x96\x64\x7a\x6d\x14\x71\x10\x51\xd2\x43\xc7\x6c\x7b\xba\xbc\x5e\x7a\x95\xc6\x09\xcf\x1e\x6c\x44\xa7\xfd\xdd\xb1\x88\x8e\xc9\x0a\xeb\xc2\x8b\x3e\xd7\x4b\x5c\xb5\x45\x31\xa3\x92\x58\xa7\xb8\x55\x78\x77\xa2\x52\x54\x53\xa7\x56\x47\x0b\xa9\xda\xca\x53\x0f\xb7\x29\x62\xa1\x47\xf3\xf2\x7a\xf9\x00\x4b\xf2\xe3\xb9\xbc\x5e\xc6\x76\xd2\x0f\x8c\xa7\x55\x68\x0b\xb6\x6c\x87\xb0\x42\x14\xa0\xab\x94\x26\xd9\x75\x95\xe7\xfb\x50\xb1\xac\x35\xb6\x7e\xd2\x73\xfe\x58\xe3\x1b\x64\xb1\x6c\xf9\x40\x96\x3c\x7a\x00\xfc\x22\x74\x48\x4a\xb5\x87\x30\x7d\x80\x13\x99\x2d\x35\x5e\x3f\xf6\x35\x9b\xe3\x20\x77\x08\x22\x8f\xef\xb2\xe4\x4c\x9b\x1b\xc5\x84\xe6\xe1\xf7\x75\xee\x79\x04\x20\x7c\xc2\xfc\x98\x31\x83\xc7\x03\x68\xad\x40\xad\xd9\xe6\x61\x3d\x28\x64\x7a\x68\xf5\x30\xf1\x6a\x1f\x2b\xcd\x7e\x75\x68\xf9\xf0\x69\xd5\xb0\x1b\x17\xb6\x0b\x84\xd4\xd0\x4a\x20\x7c\x29\x6c\x8d\xc2\xa8\xa1\x7d\xbe\xc2\xc0\xe3\x75\x81\x5b\x5c\xd5\xd1\x6b\x8c\xaf\xc7\x02\xae\x8f\x05\x5c\x7b\x9f\xc7\x02\xae\x8f\x05\x5c\x0f\x1e\xce\xce\xc3\x3c\x16\x70\x7d\x2c\xe0\xfa\x58\xc0\xf5\xb1\x80\xeb\x63\x01\xd7\xc7\x02\xae\xff\x5b\x0a\xb8\x86\x34\xe5\x4f\xee\x97\x5b\x22\x5b\x1d\xdd\x8b\x20\xbd\xe6\x91\x6c\x6d\xf8\x19\x18\xfb\x8b\x65\xfe\x85\x07\x26\x2d\x0f\x6e\x32\xea\x39\xb7\xd9\xda\xf5\xb0\xd8\xc1\xb5\xa6\x05\x05\x3d\x7f\x4d\xc3\x75\xb3\x98\x79\x4c\x16\x4a\x99\x91\x98\x95\xf3\x8a\x76\xb6\xb6\x9f\x83\xb6\xda\x74\xb9\xe0\x1e\xc9\x70\x4c\x9f\x08\x58\x9a\xfe\xd6\xa3\xcd\x3b\xb6\x2e\x43\xca\x75\x3f\xc5\x3c\x7b\x81\x65\x72\x3d\xe7\x68\x7b\xd3\x2c\xa8\xb1\x7b\x82\xfd\xf0\x18\xb3\x3b\x70\xd6\xcf\x45\x08\x7f\xf4\xfb\x1e\x0b\xad\xd1\xa3\xb8\xc3\x47\x28\x3f\xed\xf8\xe4\xf0\x55\xef\x07\x1e\x9d\xf4\x47\x24\xa3\x24\x1f\x72\x6c\x32\x76\x3c\x72\x60\x57\xf3\x53\xce\x4c\x3e\xf8\xce\xe0\xf8\x3d\x9a\xa9\x1d\xd3\x2f\x74\x3e\xf2\x8b\x9c\x8d\x7c\xf0\xb9\xc8\xd8\xf9\xc7\x68\x0f\x93\x47\x90\x6b\x31\xef\xc2\x31\xa0\xdd\x69\xf3\x97\xd5\xd0\xb1\xff\x29\x69\xfb\x00\xfc\x6f\x24\xb6\x36\x95\xb5\x91\x8a\x6d\xc2\x36\x73\x93\x52\x62\x29\xc1\x5e\xcc\xae\x0f\x7f\x32\xfa\xc8\xb1\x13\x7e\xff\xd9\xfe\xd9\xda\x2a\x82\xff\xfc\xaf\x27\x8e\x2a\x66\xbf\x06\x3e\xe8\xcb\xff\x0e\x00\x00\xff\xff\x1e\xf3\xd0\xcd\x40\x7b\x00\x00")

func manifests00CustomResourceDefinitionYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionYaml,
		"manifests/00-custom-resource-definition.yaml",
	)
}

func manifests00CustomResourceDefinitionYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition.yaml", size: 31552, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb6, 0x99, 0x36, 0xbb, 0xc7, 0xd2, 0x8, 0xe6, 0x28, 0x1, 0x1a, 0x3, 0x2, 0xb7, 0x25, 0x53, 0x84, 0xb8, 0xc4, 0x92, 0x50, 0xd3, 0x19, 0xe6, 0xf6, 0xfe, 0x29, 0x10, 0x84, 0x86, 0x30, 0xd9}}
	return a, nil
}

var _manifests00IngressCredentialsRequestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x52\xc1\x6e\x1b\x3b\x0c\xbc\xef\x57\x10\x3e\x3e\x40\x9b\x17\x14\x05\x0a\xdd\x12\xb7\x48\x0f\x39\x04\x36\xd0\x02\xbd\xd1\xd2\x78\x23\x44\x16\xb7\x22\x37\x05\xfa\xf5\x85\xec\xed\xba\xa9\x4f\xbd\x05\xb9\xad\x38\x24\x67\x76\x38\x3c\xa6\x2f\xa8\x9a\xa4\x78\x0a\x59\xa6\x18\x2a\x22\x8a\x25\xce\xbd\x8c\x28\xfa\x98\xf6\xd6\x27\xb9\x7a\xbe\xee\x9e\x52\x89\x9e\xd6\x4b\x83\x6e\xf0\x7d\x82\x5a\x77\x80\x71\x64\x63\xdf\x11\x65\xde\x21\x6b\xfb\x22\x0a\x52\xac\x4a\xce\xa8\xce\x44\xb2\xf6\x4f\x1f\xb4\x4f\xe2\x69\x75\xdd\xff\xbf\xea\x88\x0a\x1f\xe0\x69\xe1\x71\xa9\x0c\x15\xaa\x33\xa2\x23\x87\x17\xf0\x51\xa0\x3b\x2b\x74\x32\xa2\xb2\x49\xed\x74\x44\x68\x9c\x8a\x50\x61\x1b\xec\x4f\x02\x4e\xfb\xff\x1e\xd3\x05\xbb\x60\x98\x05\x9c\x17\x13\x8d\x55\x9e\x53\x44\xdd\xce\x14\x44\xff\xe2\x59\xeb\x3f\xf9\x76\xf3\x75\xfb\xf0\xc7\xaa\x23\xa2\xc6\x86\x03\x8a\x7d\x2a\x56\x13\x66\xdb\x1c\x61\xbf\x47\x30\x4f\x37\x39\xcb\x8f\x63\x8d\x88\x83\x35\xc6\xf9\xe5\x08\x99\xd5\x52\xc8\xc2\x71\xc7\x99\x4b\x48\x65\xf0\x1f\xa1\xa1\xa6\x1d\xee\x85\xe3\xed\xb1\x8a\xaa\xcb\x48\x95\xc9\xf0\xfe\x9d\xbf\x4f\x6a\x9f\x45\x0d\xf1\x9b\x14\x5c\xe2\xeb\x47\x2e\x03\x36\x50\x99\x6a\xc0\x06\x41\x6a\xdc\xc2\xce\x8d\xc6\x83\xbf\x6b\x3e\x9f\x3a\x7e\x03\x75\x7e\x7b\x5a\xfd\xb7\xea\x9c\x73\xdd\xab\x8c\x97\xe3\x9f\x53\xc5\xdb\x0c\x59\xfb\xb3\x8b\x98\x55\xc9\xb8\x4d\x25\xa6\x32\x2c\x11\x6b\x35\x4f\xeb\x66\x61\xda\x4d\x4d\xc5\xeb\xbd\xd7\x10\xc6\x37\x79\xad\xbb\xf5\xc3\xc5\xad\xc6\x36\xb8\x4f\x05\x71\x23\x19\x2f\xce\xa5\x57\xb1\x68\xcf\xf1\x90\x4a\xf7\x2b\x00\x00\xff\xff\x8f\x64\x7a\x7c\xb8\x05\x00\x00")

func manifests00IngressCredentialsRequestYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00IngressCredentialsRequestYaml,
		"manifests/00-ingress-credentials-request.yaml",
	)
}

func manifests00IngressCredentialsRequestYaml() (*asset, error) {
	bytes, err := manifests00IngressCredentialsRequestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-ingress-credentials-request.yaml", size: 1464, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc8, 0x2c, 0xb5, 0xfb, 0x97, 0x77, 0x7d, 0xd7, 0x6d, 0x81, 0x2f, 0x39, 0x37, 0xcd, 0x2b, 0x82, 0x89, 0xac, 0x43, 0x14, 0x12, 0x84, 0x8, 0xf9, 0x32, 0x7f, 0xa9, 0x86, 0xe7, 0x98, 0x8d, 0x15}}
	return a, nil
}

var _manifests00NamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x4e\xc4\x40\x0c\x44\xfb\xfd\x8a\x51\xa8\x03\xa2\xdd\x7f\x80\x06\x89\xde\xb7\xf1\xdd\x99\xdb\xd8\x2b\xdb\x17\x7e\x1f\x45\x20\x88\x44\x69\x79\xde\xcc\xbb\x89\x2e\x15\xaf\xb4\x72\x0c\x6a\x5c\x68\xc8\x3b\x7b\x88\x69\xc5\xf6\x5c\x56\x4e\x5a\x28\xa9\x16\x80\x54\x2d\x29\xc5\x34\xf6\x13\xb0\xc1\x1a\x57\x39\xe7\xa3\xd8\x93\xda\xc2\x73\x70\xe7\x96\xe6\x15\xd3\x54\x80\x4e\x27\xee\x3f\xe1\x07\x50\xef\xf6\xf9\x07\xcd\xab\xa9\xa4\xb9\xe8\x05\x69\xe8\x66\x37\x9c\xcd\xf1\xc6\xbe\x49\xe3\x97\xef\x2f\xec\xf4\xc1\x2d\x03\xa2\xc8\xab\x04\xf4\x57\xf5\x9f\x42\xeb\xf7\x48\xf6\x43\x71\xc5\x94\x7e\xe7\xdd\x65\xe7\xea\x61\x5d\xf4\xe2\x1c\x31\xdb\x60\xa7\x34\x2f\x5f\x01\x00\x00\xff\xff\xf3\x40\x5a\x74\x0a\x01\x00\x00")

func manifests00NamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00NamespaceYaml,
		"manifests/00-namespace.yaml",
	)
}

func manifests00NamespaceYaml() (*asset, error) {
	bytes, err := manifests00NamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-namespace.yaml", size: 266, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc5, 0x8c, 0x18, 0x1c, 0xe2, 0xe5, 0x97, 0x66, 0x8, 0xfe, 0x5b, 0x6, 0x60, 0x9d, 0x8f, 0xac, 0x16, 0x66, 0x66, 0x65, 0x25, 0xb3, 0x8f, 0xef, 0x71, 0x1d, 0x82, 0x2c, 0x1f, 0xa4, 0xd, 0x83}}
	return a, nil
}

var _manifests0000_90_ingressOperator_00_prometheusroleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8c\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x82\xc8\x2e\x17\xdd\x02\x5d\xa0\x7b\x87\xee\x8c\xfc\x1b\x13\xb6\x45\x81\xa4\x5c\xa0\xa7\x0f\x92\x78\xe2\x7b\x0f\xc4\xe7\x2e\x3f\x30\x17\x6d\x85\xec\xc6\x75\xe2\x11\x8b\x9a\xfc\x73\x88\xb6\x69\xbd\xfa\x24\xfa\x71\x7c\xa6\x55\xda\x5c\xe8\x5b\x37\xa4\x1d\xc1\x33\x07\x97\x44\xd4\x78\x47\xa1\x6e\xba\x23\x16\x0c\xcf\xeb\xd5\xcf\xec\x9d\x2b\x0a\x69\x47\xf3\x45\x7e\x23\x4b\xbb\x1b\xdc\xb3\x76\x18\x87\x5a\xb2\xb1\xc1\x4b\xca\xc4\x5d\xbe\x4c\x47\xf7\xe7\x64\xa6\xcb\x25\x11\x19\x5c\x87\x55\x9c\xcd\x61\x87\x54\xf8\x4b\xd0\xe6\xae\xd2\xe2\x6d\x5d\xe7\x27\x1c\xb0\xdb\xf9\x7c\x47\xbc\xee\x26\xfe\x86\x3f\x8e\xba\xa4\x47\x00\x00\x00\xff\xff\xca\x87\x68\x45\xed\x00\x00\x00")

func manifests0000_90_ingressOperator_00_prometheusroleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_00_prometheusroleYaml,
		"manifests/0000_90_ingress-operator_00_prometheusrole.yaml",
	)
}

func manifests0000_90_ingressOperator_00_prometheusroleYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_00_prometheusroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_00_prometheusrole.yaml", size: 237, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5e, 0xfa, 0xc5, 0xb2, 0xce, 0xdd, 0xc0, 0x21, 0x49, 0xc0, 0x28, 0xa6, 0x7d, 0x8c, 0x46, 0xd4, 0xf3, 0x9d, 0x8, 0xb3, 0x2c, 0x8c, 0xac, 0x17, 0x87, 0xc8, 0x6c, 0x6a, 0x69, 0x5d, 0xef, 0x90}}
	return a, nil
}

var _manifests0000_90_ingressOperator_01_prometheusrolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xb1\x4e\xc4\x30\x0c\x06\xe0\x3d\x4f\xe1\x17\x48\x11\xdb\x29\x1b\x2c\xec\x87\xc4\xee\x4b\x7d\x57\xd3\xc6\x8e\x6c\xa7\x03\x4f\x8f\x2a\x55\x62\x02\x89\xd5\xb2\xfe\xff\xfb\xb1\xf3\x07\x99\xb3\x4a\x01\xbb\x61\x9d\x70\xc4\xa2\xc6\x5f\x18\xac\x32\xad\x17\x9f\x58\x9f\xf6\xe7\xb4\xb2\xcc\x05\xae\xba\xd1\x2b\xcb\xcc\xf2\x48\x8d\x02\x67\x0c\x2c\x09\x40\xb0\x51\x81\x6e\xda\x28\x16\x1a\x9e\xd7\x8b\x9f\x67\xef\x58\xa9\x80\x76\x12\x5f\xf8\x1e\x99\xe5\x61\xe4\x9e\xb5\x93\x61\xa8\x25\xd3\x8d\xae\x74\x3f\x72\xb0\xf3\x9b\xe9\xe8\x7f\x60\x12\xc0\x8f\xe5\xb7\x6a\x1f\xb7\x4f\xaa\xe1\x25\xe5\xf3\xfb\x9d\x6c\xe7\x4a\x2f\xb5\xea\x90\xf8\x27\xb9\xa9\x70\xa8\x1d\xab\xbf\x03\x00\x00\xff\xff\x37\x75\xb6\xb0\x31\x01\x00\x00")

func manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,
		"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml",
	)
}

func manifests0000_90_ingressOperator_01_prometheusrolebindingYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml", size: 305, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x62, 0xb9, 0xd5, 0x57, 0xe3, 0x88, 0x98, 0x3e, 0x29, 0xea, 0xbf, 0x8c, 0x99, 0x2e, 0x96, 0xf8, 0xdf, 0xc2, 0x96, 0xd, 0xc7, 0x9e, 0xa3, 0x8b, 0x90, 0x2b, 0x7a, 0xa1, 0x1f, 0xfc, 0x4f, 0x3f}}
	return a, nil
}

var _manifests0000_90_ingressOperator_02_servicemonitorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xb1\xae\xd5\x30\x0c\x86\xf7\x3e\x85\x5f\xa0\x0d\x88\x2d\x2b\x12\x13\xb0\x80\xd8\x53\x9f\xff\xb6\xe1\x34\x76\x64\xbb\x7d\x7e\xd4\xf6\xdc\x09\xdd\xd1\x7f\xbe\xfc\xfa\xe2\x94\x5e\xff\xc0\xbc\xaa\x64\x6a\x2a\x35\xd4\xaa\x2c\x13\xab\x41\x7d\x62\x6d\xe9\xf8\x3c\x3c\xab\x3c\x32\xfd\x82\x1d\x95\xf1\xe3\xa6\x86\x86\x28\x8f\x12\x25\x0f\x44\x52\x1a\x32\x55\x59\x0c\xee\xa3\x76\x58\x39\x91\xfb\xc0\x7b\x61\x64\xd2\x0e\xf1\xb5\xbe\xc5\xf8\x1f\xe7\x1d\x7c\xd6\x40\x1e\x5d\xab\x84\x9f\xc3\x48\x33\x8a\xc1\x7e\xeb\x13\xf2\xad\x6e\xc8\x94\x8e\x62\xc9\x76\x49\x0e\x36\x84\xa7\xe7\x3e\xc3\x04\x01\x9f\xaa\x26\xbf\x05\x0b\xb3\xee\x12\x29\xce\x8b\x03\x11\x51\x95\x80\x1d\x65\xcb\xf4\xe5\x93\x5f\x49\x57\x8b\x4c\x0d\x61\x95\xef\xc4\x79\xc5\xf9\x88\x35\xa2\xdf\x49\x6c\xfe\x55\xe5\xad\x2e\xf9\x1a\x89\xb8\xbc\x34\x10\x9c\xba\x69\x43\xac\xd8\x3d\xf1\x45\xb5\xd2\xfd\x56\x90\x65\x64\x58\xf8\xc8\x65\x9c\x77\x79\x6c\x78\x57\x1b\xb9\x4c\x6c\xf1\xea\x3b\x43\xd8\xcf\x6b\x77\x2f\x95\xe9\xe3\x2d\x4d\x7e\xf0\x40\xf4\x57\xe7\xef\x65\xc6\x96\x89\xb5\x75\x15\xc8\x59\xe7\xd8\xc0\xa1\x76\xab\xb6\x12\xbc\x5e\x94\xbf\xbb\x7f\xf0\x43\xff\x02\x00\x00\xff\xff\xf3\xaa\xe4\xf4\xff\x01\x00\x00")

func manifests0000_90_ingressOperator_02_servicemonitorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_02_servicemonitorYaml,
		"manifests/0000_90_ingress-operator_02_servicemonitor.yaml",
	)
}

func manifests0000_90_ingressOperator_02_servicemonitorYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_02_servicemonitorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_02_servicemonitor.yaml", size: 511, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2b, 0xe6, 0x77, 0x40, 0x4f, 0x55, 0xae, 0x76, 0xce, 0xd1, 0x27, 0xf5, 0x2e, 0xec, 0x50, 0xfd, 0xf9, 0xf5, 0x2, 0xcd, 0x27, 0xfc, 0x51, 0x80, 0xdf, 0x29, 0x71, 0xe1, 0xca, 0xa7, 0x73, 0x22}}
	return a, nil
}

var _manifests01ClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x4f\x03\x31\x0c\x85\xf7\xfc\x0a\x4b\xcc\x17\xc4\x86\xb2\x01\x03\x7b\x91\xd8\xdd\x9c\xdb\x33\xbd\xda\x91\xed\x74\xe0\xd7\xa3\xe8\x0a\x4b\xa5\x8a\xd9\x7e\xef\x7d\xdf\x03\xbc\xb2\xcc\x0e\xb1\x10\x68\x23\xc3\x50\x83\xba\x76\x0f\x32\x30\x5d\x09\x42\x81\xc3\xe1\x83\xec\xc2\x95\xe0\xa5\x56\xed\x12\x39\x9d\x58\xe6\x02\x6f\xdb\xeb\x4e\x57\x1a\x45\x2c\xc7\x84\x8d\x3f\xc9\x9c\x55\x0a\xd8\x1e\x6b\xc6\x1e\x8b\x1a\x7f\x63\xb0\x4a\x3e\x3d\x7b\x66\x7d\xbc\x3c\xa5\x33\x05\xce\x18\x58\x12\x80\xe0\x99\xca\x20\x10\x5f\xf8\x10\x13\xcb\xd1\xc8\x7d\xfa\x65\x4a\xde\xf7\x5f\x54\xc3\x4b\x9a\x60\x9b\xbe\x12\x5d\x81\xfe\x3a\x6e\x92\xdb\xc1\x1b\xd6\xfb\x0b\xc3\x76\x47\x87\x41\x73\xe3\x96\x00\xb0\xf1\xbb\x69\x6f\x77\xa4\xfe\xe3\xf1\x13\x00\x00\xff\xff\x5e\x3a\x23\xb1\x71\x01\x00\x00")

func manifests01ClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ClusterRoleBindingYaml,
		"manifests/01-cluster-role-binding.yaml",
	)
}

func manifests01ClusterRoleBindingYaml() (*asset, error) {
	bytes, err := manifests01ClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-cluster-role-binding.yaml", size: 369, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xda, 0x8e, 0x10, 0x4b, 0xec, 0x40, 0x80, 0x5c, 0x10, 0x83, 0xa9, 0x57, 0x2, 0x49, 0x9d, 0x4e, 0x4d, 0x6a, 0xec, 0xaf, 0x5d, 0x81, 0xa3, 0x2f, 0x1e, 0xd3, 0x8b, 0x69, 0xa0, 0x39, 0x50, 0xdf}}
	return a, nil
}

var _manifests01RoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xd0\x31\x4f\xc3\x40\x0c\x05\xe0\xfd\x7e\xc5\x93\x98\x13\xc4\x86\x6e\x83\x85\xbd\x48\xec\xee\xc5\x6d\x4c\x5b\xfb\x64\x3b\x1d\xf8\xf5\x28\x22\x88\x01\xc1\xd2\xd9\xb6\xde\xf7\x7c\x87\x67\xd1\x29\x90\x33\xc3\x3a\x3b\xa5\x39\xdc\xce\x8c\x34\x48\x06\x5e\xd9\xaf\xd2\x18\x4f\xad\xd9\xa2\x39\x96\x93\xe8\x54\xb1\xb3\x33\xaf\x97\xa2\xc7\x42\x5d\xde\xd8\x43\x4c\x2b\x7c\x4f\x6d\xa4\x25\x67\x73\xf9\xa0\x14\xd3\xf1\xf4\x18\xa3\xd8\xfd\xf5\xa1\x5c\x38\x69\xa2\xa4\x5a\x00\xa5\x0b\x57\x88\x1e\x9d\x23\x86\xef\xe8\x6d\x10\x9d\x1a\xd7\x15\xa4\x31\xcb\x21\x87\x5f\x7b\xb1\xec\xdf\xb9\x65\xd4\x32\xe0\x4b\xb4\x41\x37\xe7\xed\x09\xeb\x13\x76\x7c\x58\xad\x3f\x95\x0b\x40\x5d\x5e\xdc\x96\xfe\x4f\xd7\xbf\xc3\x3f\x03\x00\x00\xff\xff\x1f\x8f\x27\xc8\x6f\x01\x00\x00")

func manifests01RoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleBindingYaml,
		"manifests/01-role-binding.yaml",
	)
}

func manifests01RoleBindingYaml() (*asset, error) {
	bytes, err := manifests01RoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role-binding.yaml", size: 367, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xce, 0x6b, 0xe2, 0x98, 0x77, 0x85, 0x4, 0x5f, 0x81, 0xee, 0xa8, 0x60, 0xbe, 0x8a, 0xf3, 0x3, 0xad, 0xd8, 0x7, 0x27, 0x33, 0x11, 0xe8, 0x28, 0x66, 0xe4, 0xd9, 0x9, 0x76, 0xee, 0x60, 0xb5}}
	return a, nil
}

var _manifests01RoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x82\x70\xb7\x02\x56\xd1\xad\xd0\x05\xba\x77\xe8\xce\xc8\x74\x42\x44\x12\x05\x52\x36\xd0\x9e\xbe\x88\x63\x1b\x41\x3c\x74\x13\xc5\xf7\x9f\x3e\xf4\x02\x5f\x92\x08\x46\x51\x68\x17\x02\xa9\xa4\xd8\x44\x81\x9b\x51\x1a\xbd\xbb\x72\x19\xc2\xc2\x38\xac\xfc\x4d\x6a\x2c\x25\x80\x9e\x30\x7a\x9c\xda\x45\x94\x7f\xb1\xb1\x14\x7f\xfd\x30\xcf\xf2\x36\xbf\xbb\x4c\x0d\x07\x6c\x18\x1c\x40\xc1\x4c\x01\xb8\x9c\x95\xcc\xfa\x4d\xbf\x2e\xac\x62\xa4\x70\x7b\xb4\xd8\x85\xc7\xd6\x1f\x38\x9d\x12\x59\x70\x3d\x60\xe5\x4f\x95\xa9\xda\x4d\xda\xef\x3d\xfd\x9e\xf5\x2c\x0e\x40\xc9\x64\xd2\x48\x2b\xd6\xbd\x76\x0e\x60\x26\x3d\x3d\x5c\x1c\x6d\x5d\x77\x8c\x56\x19\x6c\x39\x18\xe9\xcc\x91\xee\x03\x95\xa1\x0a\x97\x76\x9f\xea\xed\x3b\xac\x51\x69\xb3\xa4\x29\x53\x4c\xc8\x79\x05\x67\xda\xa8\x28\x65\xe4\x73\xc6\xba\xf9\xa2\xd2\xb2\xfa\xb7\x17\xd6\x25\xf3\xd4\x6c\xa0\x9a\xe4\x27\xef\xfe\x87\x82\x4f\xc6\xbf\x00\x00\x00\xff\xff\x4f\x96\x11\xa4\xdd\x01\x00\x00")

func manifests01RoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleYaml,
		"manifests/01-role.yaml",
	)
}

func manifests01RoleYaml() (*asset, error) {
	bytes, err := manifests01RoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role.yaml", size: 477, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4d, 0xf1, 0xe, 0xa2, 0x89, 0xa6, 0xa5, 0x86, 0x8d, 0x2d, 0x22, 0x6e, 0x62, 0x6c, 0x7c, 0x58, 0xca, 0x7b, 0x96, 0x5f, 0xa7, 0xbd, 0x5f, 0xcb, 0x2d, 0x53, 0xeb, 0x25, 0xd3, 0x62, 0x2c, 0xf8}}
	return a, nil
}

var _manifests01ServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x6e\x84\x30\x10\x44\x7b\x7f\xc5\x48\xd4\x20\xa5\x75\x97\x32\x75\xa4\xf4\x96\x3d\x84\xd5\x81\xed\xdb\x5d\xf8\xfe\x13\x88\xab\xae\x9e\xa7\x37\x6f\xc0\x77\xce\x6d\xaf\x8e\xb9\x29\x7c\x21\x5a\xa7\x26\x6f\x0a\x71\xe3\x3a\x4f\xf8\x71\xd8\xd2\xf6\xb5\x40\xf9\xdc\x45\x89\x9a\x36\x5a\x4f\x99\xb0\xdc\x3a\x4b\x18\xd0\xa9\x9b\x98\x49\xab\x36\x85\x87\xd4\x12\xf1\x4b\x3d\x24\xf3\xf6\x87\xd4\xe5\x8f\x7a\x12\x11\xc7\x57\xd8\xe8\xa9\x24\x4f\x31\xe0\xf2\x45\x48\xfd\x57\x9a\x8d\xef\x80\x7b\xb8\x8e\xe2\x99\x55\x6d\x91\xd9\xc7\x0f\xee\x15\x00\x00\xff\xff\xe5\x09\x18\x74\xc4\x00\x00\x00")

func manifests01ServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceAccountYaml,
		"manifests/01-service-account.yaml",
	)
}

func manifests01ServiceAccountYaml() (*asset, error) {
	bytes, err := manifests01ServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service-account.yaml", size: 196, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0xae, 0x8d, 0xe1, 0x55, 0xc4, 0xdf, 0x60, 0x69, 0xa, 0xef, 0xf1, 0x8c, 0x61, 0xea, 0x45, 0xf4, 0xa, 0xcb, 0x9d, 0xc7, 0xc3, 0xb4, 0x10, 0x8a, 0xb6, 0xf3, 0x21, 0xe6, 0x97, 0xc0, 0x28}}
	return a, nil
}

var _manifests01ServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x3d\x4e\x03\x41\x0c\x85\xfb\x39\x85\x2f\x30\x8b\x50\xaa\x4c\x4b\x45\x17\x09\x89\xde\x99\x3c\x96\x11\xb3\xf6\xc8\x36\x91\xb8\x3d\xca\xee\x02\x45\x0a\xca\xe7\xef\xfd\x98\x47\x7b\x85\x79\x53\x29\x74\x7d\x4c\x1f\x4d\x2e\x85\x5e\x60\xd7\x56\x91\x16\x04\x5f\x38\xb8\x24\x22\x16\xd1\xe0\x68\x2a\x7e\x93\x44\xbe\x99\xa6\x33\x82\x27\x1d\x10\x7f\x6f\x6f\x31\x35\x7d\x58\x89\xcc\xb9\xc2\x22\x3b\xaa\x21\xb2\xf0\x82\x42\x0b\xc2\x5a\xf5\x1c\xdd\x13\x51\xe7\x33\xfa\xde\xb6\xf1\x26\xb3\xc1\x3d\xeb\x80\x71\xa8\xa5\x1f\xb0\x07\x77\xed\x83\x2b\x0a\xfd\x8e\xe6\xbb\x9c\x0f\xd4\x5b\xf1\x50\x8b\x75\x21\xdf\x15\x6d\xb0\xd0\xf1\x70\x3c\xac\x32\xd8\x66\xc4\x69\x3d\xfe\xd9\x1c\x1d\x35\xd4\xfe\x79\x33\xbe\x06\x0a\x3d\xf5\x4f\x0f\xd8\xf3\x29\x7d\x07\x00\x00\xff\xff\x31\x2a\x66\x9a\x58\x01\x00\x00")

func manifests01ServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceYaml,
		"manifests/01-service.yaml",
	)
}

func manifests01ServiceYaml() (*asset, error) {
	bytes, err := manifests01ServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service.yaml", size: 344, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3f, 0x93, 0xf5, 0x35, 0x51, 0xf2, 0xbd, 0xe6, 0x30, 0xc3, 0xd3, 0x25, 0x22, 0x49, 0x95, 0x6a, 0x8f, 0xa2, 0x8a, 0x9c, 0x67, 0xa6, 0xe4, 0xd, 0xee, 0x77, 0x40, 0x1c, 0x28, 0xe7, 0x40, 0xa3}}
	return a, nil
}

var _manifests01TrustedCaConfigmapYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\xbf\x6e\xf3\x30\x0c\xc4\x77\x3d\xc5\x21\x99\x9d\x0f\xdf\xaa\xb5\x73\xb7\xa2\x3b\x23\xd3\x36\x1b\x99\x14\x44\xba\x45\xdf\xbe\x48\xed\xfe\x1b\x79\xe4\x1d\x7f\xb8\x33\x9e\x16\x86\x72\xbc\x59\xbf\xc1\x1a\x77\x0a\xeb\x10\x47\x67\x6f\xa6\x2e\xd7\xca\x98\xee\x92\xbe\x70\x09\xd1\x39\x9d\x11\x0b\x23\xfa\xe6\xc1\x23\x0a\xe1\xba\xe9\x58\x19\xa2\x61\x88\x45\x1c\xc5\x74\x92\x79\xa5\x76\x49\xd4\xe4\x99\xbb\x8b\x69\xc6\xeb\xff\x74\x13\x1d\x33\x1e\x3e\xf7\x8f\xd4\xd2\xca\x41\x23\x05\xe5\x04\x90\xaa\x05\x85\x98\xfa\x7d\x04\x3a\x57\x26\xe7\x8b\x35\x56\x5f\x64\x8a\x8b\xd8\xbf\xd2\x99\x82\x07\xd3\xfa\x9e\x71\x8a\xbe\xf1\x29\x01\x95\xae\x5c\x0f\xdb\xfe\xfd\xaf\x6b\xa7\x1f\x0e\xe8\xa1\xd0\xce\xfc\x2b\x41\x69\xe5\x8c\x9f\x83\x43\xf2\x46\x85\x33\xbe\xc3\x06\xd1\xb9\xb3\xfb\xf0\xd5\x55\xfa\x08\x00\x00\xff\xff\x4c\x3f\xbd\xa8\x43\x01\x00\x00")

func manifests01TrustedCaConfigmapYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01TrustedCaConfigmapYaml,
		"manifests/01-trusted-ca-configmap.yaml",
	)
}

func manifests01TrustedCaConfigmapYaml() (*asset, error) {
	bytes, err := manifests01TrustedCaConfigmapYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-trusted-ca-configmap.yaml", size: 323, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe, 0x99, 0xa0, 0xf5, 0x24, 0x3, 0x8, 0xa4, 0xc3, 0xec, 0x80, 0xc0, 0x88, 0xbd, 0x8, 0xb0, 0xfc, 0xf0, 0x3, 0x42, 0x53, 0x21, 0xf3, 0xbb, 0x4a, 0x33, 0xfd, 0x7, 0xa3, 0x23, 0x4, 0xfa}}
	return a, nil
}

var _manifests02DeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4f\x6f\xdb\xb8\x13\xbd\xe7\x53\x10\x3e\xff\x68\x39\x69\x7f\xdd\x2d\x81\x1c\xbc\xae\xda\x04\x88\xd3\x20\x0e\xda\xa3\x41\x53\x63\x9b\x6b\x8a\x64\x67\x46\x46\xf4\xed\x17\x94\xff\xc9\xb2\xe3\xe6\xb0\xeb\x93\xa1\x79\xf3\xe6\x71\xf8\x66\x24\x1d\xed\x0f\x40\xb2\xc1\x2b\xa1\x63\xa4\x6c\x7d\x7d\xb5\xb2\xbe\x50\xe2\x0b\x44\x17\xea\x12\x3c\x5f\x95\xc0\xba\xd0\xac\xd5\x95\x10\x5e\x97\xa0\x84\xf5\x0b\x04\x22\x19\x22\xa0\xe6\x80\xdb\x00\x45\x6d\x40\x89\x10\xc1\xd3\xd2\xce\x59\x9e\xc1\x69\xef\x03\x6b\xb6\xc1\x53\xe2\x13\xc2\x04\x3f\xb7\x8b\xfe\x3e\xa9\x6f\x43\x66\xfd\xdf\x60\x58\x46\x0c\xaf\xf5\x99\x6a\x14\xc1\xa4\x64\x84\xe8\xac\xd1\xa4\xc4\xf5\x95\x10\xc4\xa8\x19\x16\xf5\x86\x96\xeb\x08\x4a\x3c\x83\x41\xd0\x0c\x29\x0c\x0e\x0c\x07\xdc\x84\x4b\xcd\x66\xf9\xa0\x67\xe0\xb6\x32\x2e\x1c\x8d\xa1\x8c\x4e\x33\x6c\x33\x5b\xdd\x48\x3f\x77\x44\x72\x81\x46\x88\x9d\xee\x06\x16\x0a\x98\x1c\x49\x4a\xbf\x55\x35\x03\xf4\xc0\x40\xa9\x0d\x81\x94\x70\xd6\x57\xaf\x07\xf2\x50\x80\xc4\xe0\xa0\x7f\x8c\x2c\x35\x31\xa0\x12\xbd\xde\x16\xca\xc1\xa5\xc2\x87\x36\x0b\x21\xc5\x0a\x6a\x25\x7a\x97\x39\x7a\xfb\x5a\x3b\xe9\x4a\xf4\xf2\x57\x4b\x4c\x87\x10\xcc\xe7\x60\x58\x89\xde\x63\x98\x98\x25\x14\x95\x83\xde\x99\x2a\x9d\x02\x95\x47\xd0\x66\xa9\x67\x07\xf4\x7b\xab\xe4\xaf\x60\x2a\x6e\xa5\x1d\xce\x37\x01\x13\x7c\x91\x3c\x70\x33\xf8\xbd\x06\x1f\x58\x22\xe8\xa2\xfe\x6f\x15\x10\xe0\xda\x1a\x18\x1a\x13\x2a\xcf\x8f\x6f\x5b\x42\x88\x88\x36\xa0\xe5\x7a\xe4\x34\xd1\x06\x49\x35\x31\x94\xd2\xb8\x2a\xdd\x88\x34\x68\xd9\x1a\xed\xb6\x09\x26\x78\xd6\xd6\x03\xb6\x4c\x27\x2f\xd9\x6e\xab\x17\xb0\xb4\xbe\x11\x3c\x06\x22\xbd\x80\xa7\xe0\xac\xa9\x95\xf8\xaa\x9d\x9b\x69\xb3\x7a\x09\x0f\x61\x41\xdf\x7d\x8e\x78\x94\x69\xcb\x04\xae\x9c\xdb\x25\xdc\xcf\x1f\x03\x3f\x21\x50\xda\x0e\x1d\x5c\x6b\xfc\xb3\x80\x76\x61\xfd\xfe\x1c\x5d\x71\x2a\x0d\x15\xb5\x19\x4c\x28\x4b\xed\x0b\xd5\x7a\x24\x2f\x9d\x49\x0a\x62\x8d\x6d\x06\xf0\xeb\x76\xf6\xa1\x33\xcf\xf9\x43\x3e\x9c\xe4\xd3\x1f\xf9\xf3\xe4\xfe\xfb\xe3\x11\x46\x88\xb5\x76\x15\x28\xd1\x1b\xf4\x07\xfd\x6b\x49\x5e\x47\x5a\x06\xee\x9d\x65\xfa\x39\x7c\x19\xdd\x4d\x1f\x87\xe3\x7c\xf2\x34\x1c\xe5\xe7\x98\xbe\x62\x28\x55\x27\x20\xc4\xdc\x82\x2b\x9e\x61\x7e\x1a\xd9\xc6\x9e\x34\x2f\xd5\x7e\xc1\xf4\xf7\x2b\xf5\xac\x8c\xfb\xf1\xf0\xdb\xd9\xe2\x67\x6e\x60\xa9\x9b\x55\x2a\x31\x54\x69\x4d\xac\x3f\xf6\x07\xad\x4c\x04\x0a\x15\x1a\xa0\x63\x61\x08\xbf\x2a\x20\xa6\xae\x5c\x13\x2b\x25\xae\x07\x65\xeb\xf1\x3a\xb8\xaa\x84\x71\xf2\x3a\x9d\x6f\x3f\x63\xf2\x40\x21\x8d\xee\xb0\x95\x29\x69\x73\xf0\x0c\xd8\x64\x71\x65\x33\xa3\x65\x83\xcf\xe0\x95\x51\x1b\x86\x22\x8b\x50\x9e\x98\x3d\x4d\xb6\xc4\x99\x36\x9b\x17\xc5\xa9\x13\x7f\x55\xba\x6e\xf6\x68\xb7\x1f\x9d\xcc\x53\x23\x6a\x5c\xd0\xb1\x0b\xa5\x74\x61\xc1\x81\xb8\x00\xc4\x4e\x84\xc0\x54\x08\xd2\x59\x62\xf0\x52\x17\x45\xf2\xeb\xad\xfa\xfc\xe1\xf3\x87\x0e\x92\x1d\x49\x63\xe3\x12\x50\x52\x65\x19\xe8\xf6\xe5\x61\x32\xcd\x47\x5f\xee\xf2\xe9\xf3\x64\x38\xfd\x79\xff\x72\x37\x1d\xe6\x93\xe9\xf5\xcd\x9f\xd3\x6f\xa3\xf1\x74\x72\x37\xbc\xf9\xff\xa7\xff\x1d\x50\xf9\xe8\xcb\x6f\x70\x27\x3c\xa3\xbf\x46\xef\xe2\x39\x8b\xbb\xc0\xd6\x39\x5b\x15\x89\x11\x74\x79\xbb\x64\x8e\x2a\xcb\xae\x6f\xfe\xe8\x37\xf3\xa4\x3e\x0d\x06\x83\x41\x76\xae\x15\x80\x2c\xe7\xd6\xc1\x6d\x73\xf7\xec\x28\x8b\x68\xd7\x9a\x21\xfd\xef\x9b\xa3\xd1\xde\x25\x6d\x11\x72\x05\xf5\x85\xdc\x15\xb4\x0d\x11\x03\x72\xe7\x42\xf7\x6b\xf4\x29\x20\x2b\xd1\xb9\xac\xdd\x7b\xbc\x04\x46\x6b\xe8\x5f\x9d\x96\xc6\xf6\x50\x06\xac\x95\xf8\x38\x18\xdb\x77\x0c\x92\x3c\x99\x93\xd6\x79\xdf\x96\x9d\xfa\xd5\x51\xa9\x8b\xef\xde\xd5\xcd\x40\xee\x12\x37\x45\x5b\xdf\x09\x6f\x73\x50\xfa\x9e\xe2\xb6\xb2\xcd\x93\xc7\x37\x32\x2e\x8c\xff\xe6\xbb\x6f\xac\x63\x9b\xed\xc2\xb2\xb0\x0c\xe5\xc9\x72\x69\xde\xf3\x46\xcb\x59\xe5\x0b\x07\x1d\xc3\xa4\x5f\x6c\x3a\xd6\x78\x6d\x8f\x4a\xbb\xe4\x9f\x00\x00\x00\xff\xff\x2d\xc8\x4a\xbf\xf9\x0a\x00\x00")

func manifests02DeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests02DeploymentYaml,
		"manifests/02-deployment.yaml",
	)
}

func manifests02DeploymentYaml() (*asset, error) {
	bytes, err := manifests02DeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/02-deployment.yaml", size: 2809, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1f, 0x3, 0x35, 0xf1, 0xb8, 0xea, 0x53, 0xd3, 0xd4, 0xe0, 0x1b, 0x8b, 0xe4, 0x2d, 0xbd, 0x67, 0x5c, 0x4f, 0xda, 0xed, 0xe1, 0x2e, 0x9, 0x72, 0x30, 0xa5, 0xa7, 0x3d, 0x4b, 0x2f, 0x62, 0xf8}}
	return a, nil
}

var _manifests03ClusterOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x31\x6f\xc2\x40\x0c\x85\xf7\xfb\x15\x4f\xb0\x96\x14\xd6\xac\x4c\x9d\x58\x2a\x76\xf7\x62\x38\xab\x89\x1d\x9d\x7d\x20\xfe\x7d\x45\x00\xb5\xea\x4d\x4f\x67\xfb\x7d\xdf\x1a\x9f\x45\x1c\x95\xdd\x5a\xcd\x0c\x71\xa8\x05\x72\x65\x0a\x1e\xf0\x75\xc3\xfe\x78\x78\x83\xc4\x7d\x62\x3a\xde\xd0\x9c\x07\x90\x83\x90\x6d\x9a\x9a\x4a\xa6\x10\xd3\xb4\xc6\xc4\xb9\x90\x8a\x4f\x08\x43\xf0\x38\x22\x0a\xdf\xef\x71\x2d\x92\x0b\xf6\x63\xf3\xe0\x7a\x98\xb9\x52\x58\xfd\x85\x86\xe1\x4a\x12\x38\x59\xed\xd2\x1a\x1f\x7a\xae\xec\xbe\x37\x8d\x6a\xe3\xc8\xf5\xa9\xe3\x20\x1d\xd0\xe6\x61\xc9\xf1\xd7\xbb\x4b\x34\xcb\x91\xab\x8b\x69\x8f\x6c\x7a\x92\x73\x67\x33\xab\x17\x39\x45\x27\xf6\x7e\xd9\xa5\x6f\xd1\xa1\xff\x6f\x91\x26\x0e\x1a\x28\xa8\x4f\x80\xd2\xc4\x3d\xe4\xc1\x4f\x1e\x14\xcd\xef\xff\x97\x47\xf3\x92\x81\xcd\x73\xcf\x5e\x15\x58\xde\xe5\x85\x5f\x6d\xbb\x6d\xb7\xdb\xb8\xd2\xec\xc5\x62\x95\x7e\x02\x00\x00\xff\xff\xb3\xe2\x1b\x07\x65\x01\x00\x00")

func manifests03ClusterOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests03ClusterOperatorYaml,
		"manifests/03-cluster-operator.yaml",
	)
}

func manifests03ClusterOperatorYaml() (*asset, error) {
	bytes, err := manifests03ClusterOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/03-cluster-operator.yaml", size: 357, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9b, 0x55, 0x62, 0x66, 0x26, 0xb0, 0xbd, 0x39, 0xb8, 0x3f, 0x33, 0x66, 0x5d, 0x9f, 0x49, 0x8a, 0xa2, 0xac, 0x2a, 0x5c, 0x3e, 0x18, 0x29, 0x74, 0xbc, 0x0, 0x97, 0xc9, 0xe2, 0x1b, 0x83, 0x26}}
	return a, nil
}

var _manifestsImageReferences = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd0\xb1\x6e\xc3\x20\x10\x80\xe1\x9d\xa7\x38\x79\xc7\x69\xa5\x4e\xcc\x5d\x3a\x57\xea\x7e\x71\x2f\xce\xc9\x31\x47\xef\x8e\xa8\x79\xfb\xca\x4e\x54\x91\x56\x5e\x32\x81\x00\xfd\x1f\x30\x71\xfe\x4c\xf0\x36\xe3\x48\xef\xae\x84\x73\xc0\xc2\x1f\xa4\xc6\x92\x13\xf0\xb2\xde\x4b\xa1\x6c\x47\x3e\x78\xcf\xb2\x3b\x3f\x07\x2b\x34\xa4\x00\xe0\x38\xda\x32\x46\xc8\x38\x53\x82\xe1\x54\xcd\x49\x23\xe7\x51\xc9\x2c\x4a\x21\x45\x17\x0d\x00\x00\x07\x95\x39\xc1\x3a\x05\xb8\xaa\xdd\xab\x0c\x13\xe9\x8a\x77\xb7\x9d\x6b\xa9\xfb\x25\x77\xa2\x3c\x72\x8e\x5b\xed\x74\x42\x27\xf3\xae\xb9\xc6\x11\x8b\xca\xf7\x25\xaa\x54\xa7\x06\x7f\xd8\xbe\x0f\xa6\xf3\x4b\xff\xd4\x7a\x53\xdd\x53\xd4\x3d\x0e\x71\x3d\xb6\x01\x36\xde\x1d\xf7\x55\xf1\xb2\xfc\xeb\x3f\xf5\x4f\xf6\xf6\xd0\xf0\x13\x00\x00\xff\xff\xac\x8b\xd7\x12\xb1\x01\x00\x00")

func manifestsImageReferencesBytes() ([]byte, error) {
	return bindataRead(
		_manifestsImageReferences,
		"manifests/image-references",
	)
}

func manifestsImageReferences() (*asset, error) {
	bytes, err := manifestsImageReferencesBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/image-references", size: 433, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe4, 0x14, 0x39, 0xff, 0xa2, 0xc1, 0xc5, 0xd4, 0x2e, 0xb7, 0xd, 0x93, 0xd5, 0x83, 0x85, 0x1f, 0x1d, 0xe7, 0x73, 0xd1, 0x42, 0x8, 0xfa, 0x7a, 0x25, 0x4a, 0xed, 0x37, 0x10, 0xb8, 0x13, 0xb9}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/router/cluster-role-binding.yaml": assetsRouterClusterRoleBindingYaml,

	"assets/router/cluster-role.yaml": assetsRouterClusterRoleYaml,

	"assets/router/deployment.yaml": assetsRouterDeploymentYaml,

	"assets/router/metrics/cluster-role-binding.yaml": assetsRouterMetricsClusterRoleBindingYaml,

	"assets/router/metrics/cluster-role.yaml": assetsRouterMetricsClusterRoleYaml,

	"assets/router/metrics/role-binding.yaml": assetsRouterMetricsRoleBindingYaml,

	"assets/router/metrics/role.yaml": assetsRouterMetricsRoleYaml,

	"assets/router/namespace.yaml": assetsRouterNamespaceYaml,

	"assets/router/service-account.yaml": assetsRouterServiceAccountYaml,

	"assets/router/service-cloud.yaml": assetsRouterServiceCloudYaml,

	"assets/router/service-internal.yaml": assetsRouterServiceInternalYaml,

	"manifests/00-cluster-role.yaml": manifests00ClusterRoleYaml,

	"manifests/00-custom-resource-definition-internal.yaml": manifests00CustomResourceDefinitionInternalYaml,

	"manifests/00-custom-resource-definition.yaml": manifests00CustomResourceDefinitionYaml,

	"manifests/00-ingress-credentials-request.yaml": manifests00IngressCredentialsRequestYaml,

	"manifests/00-namespace.yaml": manifests00NamespaceYaml,

	"manifests/0000_90_ingress-operator_00_prometheusrole.yaml": manifests0000_90_ingressOperator_00_prometheusroleYaml,

	"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml": manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,

	"manifests/0000_90_ingress-operator_02_servicemonitor.yaml": manifests0000_90_ingressOperator_02_servicemonitorYaml,

	"manifests/01-cluster-role-binding.yaml": manifests01ClusterRoleBindingYaml,

	"manifests/01-role-binding.yaml": manifests01RoleBindingYaml,

	"manifests/01-role.yaml": manifests01RoleYaml,

	"manifests/01-service-account.yaml": manifests01ServiceAccountYaml,

	"manifests/01-service.yaml": manifests01ServiceYaml,

	"manifests/01-trusted-ca-configmap.yaml": manifests01TrustedCaConfigmapYaml,

	"manifests/02-deployment.yaml": manifests02DeploymentYaml,

	"manifests/03-cluster-operator.yaml": manifests03ClusterOperatorYaml,

	"manifests/image-references": manifestsImageReferences,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": {nil, map[string]*bintree{
		"router": {nil, map[string]*bintree{
			"cluster-role-binding.yaml": {assetsRouterClusterRoleBindingYaml, map[string]*bintree{}},
			"cluster-role.yaml":         {assetsRouterClusterRoleYaml, map[string]*bintree{}},
			"deployment.yaml":           {assetsRouterDeploymentYaml, map[string]*bintree{}},
			"metrics": {nil, map[string]*bintree{
				"cluster-role-binding.yaml": {assetsRouterMetricsClusterRoleBindingYaml, map[string]*bintree{}},
				"cluster-role.yaml":         {assetsRouterMetricsClusterRoleYaml, map[string]*bintree{}},
				"role-binding.yaml":         {assetsRouterMetricsRoleBindingYaml, map[string]*bintree{}},
				"role.yaml":                 {assetsRouterMetricsRoleYaml, map[string]*bintree{}},
			}},
			"namespace.yaml":        {assetsRouterNamespaceYaml, map[string]*bintree{}},
			"service-account.yaml":  {assetsRouterServiceAccountYaml, map[string]*bintree{}},
			"service-cloud.yaml":    {assetsRouterServiceCloudYaml, map[string]*bintree{}},
			"service-internal.yaml": {assetsRouterServiceInternalYaml, map[string]*bintree{}},
		}},
	}},
	"manifests": {nil, map[string]*bintree{
		"00-cluster-role.yaml":                                   {manifests00ClusterRoleYaml, map[string]*bintree{}},
		"00-custom-resource-definition-internal.yaml":            {manifests00CustomResourceDefinitionInternalYaml, map[string]*bintree{}},
		"00-custom-resource-definition.yaml":                     {manifests00CustomResourceDefinitionYaml, map[string]*bintree{}},
		"00-ingress-credentials-request.yaml":                    {manifests00IngressCredentialsRequestYaml, map[string]*bintree{}},
		"00-namespace.yaml":                                      {manifests00NamespaceYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_00_prometheusrole.yaml":        {manifests0000_90_ingressOperator_00_prometheusroleYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_01_prometheusrolebinding.yaml": {manifests0000_90_ingressOperator_01_prometheusrolebindingYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_02_servicemonitor.yaml":        {manifests0000_90_ingressOperator_02_servicemonitorYaml, map[string]*bintree{}},
		"01-cluster-role-binding.yaml":                           {manifests01ClusterRoleBindingYaml, map[string]*bintree{}},
		"01-role-binding.yaml":                                   {manifests01RoleBindingYaml, map[string]*bintree{}},
		"01-role.yaml":                                           {manifests01RoleYaml, map[string]*bintree{}},
		"01-service-account.yaml":                                {manifests01ServiceAccountYaml, map[string]*bintree{}},
		"01-service.yaml":                                        {manifests01ServiceYaml, map[string]*bintree{}},
		"01-trusted-ca-configmap.yaml":                           {manifests01TrustedCaConfigmapYaml, map[string]*bintree{}},
		"02-deployment.yaml":                                     {manifests02DeploymentYaml, map[string]*bintree{}},
		"03-cluster-operator.yaml":                               {manifests03ClusterOperatorYaml, map[string]*bintree{}},
		"image-references":                                       {manifestsImageReferences, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
